"use strict";var cov_zg3rlmfcu=function(){var path="C:\\Users\\PRAKASHSELVARAJ\\Blockchain\\Home Depot\\Development\\chaincode_0901\\src\\___tests___\\unit-of-measure-contract.spec.ts";var hash="ad80855ee5139481056d8914a06b2eeb37625564";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\PRAKASHSELVARAJ\\Blockchain\\Home Depot\\Development\\chaincode_0901\\src\\___tests___\\unit-of-measure-contract.spec.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:22},end:{line:3,column:44}},"2":{start:{line:4,column:25},end:{line:4,column:52}},"3":{start:{line:5,column:13},end:{line:5,column:28}},"4":{start:{line:6,column:23},end:{line:6,column:50}},"5":{start:{line:7,column:14},end:{line:7,column:30}},"6":{start:{line:8,column:18},end:{line:8,column:39}},"7":{start:{line:9,column:16},end:{line:9,column:34}},"8":{start:{line:10,column:0},end:{line:10,column:14}},"9":{start:{line:11,column:0},end:{line:11,column:25}},"10":{start:{line:12,column:0},end:{line:12,column:20}},"11":{start:{line:15,column:8},end:{line:15,column:74}},"12":{start:{line:16,column:8},end:{line:16,column:85}},"13":{start:{line:17,column:8},end:{line:20,column:10}},"14":{start:{line:23,column:35},end:{line:23,column:83}},"15":{start:{line:24,column:17},end:{line:24,column:37}},"16":{start:{line:25,column:0},end:{line:151,column:3}},"17":{start:{line:28,column:20},end:{line:28,column:22}},"18":{start:{line:29,column:4},end:{line:78,column:7}},"19":{start:{line:31,column:8},end:{line:31,column:74}},"20":{start:{line:32,column:8},end:{line:32,column:32}},"21":{start:{line:33,column:8},end:{line:33,column:55}},"22":{start:{line:35,column:8},end:{line:55,column:10}},"23":{start:{line:57,column:8},end:{line:57,column:89}},"24":{start:{line:58,column:8},end:{line:58,column:179}},"25":{start:{line:60,column:23},end:{line:74,column:9}},"26":{start:{line:61,column:33},end:{line:61,column:40}},"27":{start:{line:63,column:16},end:{line:63,column:43}},"28":{start:{line:64,column:16},end:{line:72,column:18}},"29":{start:{line:68,column:38},end:{line:68,column:43}},"30":{start:{line:69,column:40},end:{line:69,column:78}},"31":{start:{line:75,column:8},end:{line:75,column:41}},"32":{start:{line:76,column:8},end:{line:76,column:38}},"33":{start:{line:77,column:8},end:{line:77,column:122}},"34":{start:{line:79,column:4},end:{line:145,column:7}},"35":{start:{line:80,column:8},end:{line:128,column:11}},"36":{start:{line:81,column:25},end:{line:91,column:13}},"37":{start:{line:92,column:28},end:{line:92,column:75}},"38":{start:{line:93,column:27},end:{line:93,column:29}},"39":{start:{line:94,column:12},end:{line:125,column:14}},"40":{start:{line:126,column:12},end:{line:126,column:203}},"41":{start:{line:127,column:12},end:{line:127,column:59}},"42":{start:{line:129,column:8},end:{line:144,column:11}},"43":{start:{line:130,column:29},end:{line:140,column:13}},"44":{start:{line:141,column:28},end:{line:141,column:79}},"45":{start:{line:142,column:12},end:{line:142,column:207}},"46":{start:{line:143,column:12},end:{line:143,column:63}},"47":{start:{line:146,column:4},end:{line:150,column:7}},"48":{start:{line:147,column:8},end:{line:149,column:11}},"49":{start:{line:148,column:12},end:{line:148,column:94}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:14,column:4},end:{line:14,column:5}},loc:{start:{line:14,column:18},end:{line:21,column:5}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:25,column:34},end:{line:25,column:35}},loc:{start:{line:25,column:40},end:{line:151,column:1}},line:25},"2":{name:"(anonymous_2)",decl:{start:{line:29,column:15},end:{line:29,column:16}},loc:{start:{line:29,column:21},end:{line:78,column:5}},line:29},"3":{name:"(anonymous_3)",decl:{start:{line:61,column:19},end:{line:61,column:20}},loc:{start:{line:61,column:31},end:{line:61,column:42}},line:61},"4":{name:"(anonymous_4)",decl:{start:{line:62,column:18},end:{line:62,column:19}},loc:{start:{line:62,column:30},end:{line:73,column:13}},line:62},"5":{name:"(anonymous_5)",decl:{start:{line:68,column:32},end:{line:68,column:33}},loc:{start:{line:68,column:38},end:{line:68,column:43}},line:68},"6":{name:"(anonymous_6)",decl:{start:{line:69,column:34},end:{line:69,column:35}},loc:{start:{line:69,column:40},end:{line:69,column:78}},line:69},"7":{name:"(anonymous_7)",decl:{start:{line:79,column:35},end:{line:79,column:36}},loc:{start:{line:79,column:41},end:{line:145,column:5}},line:79},"8":{name:"(anonymous_8)",decl:{start:{line:80,column:46},end:{line:80,column:47}},loc:{start:{line:80,column:58},end:{line:128,column:9}},line:80},"9":{name:"(anonymous_9)",decl:{start:{line:129,column:46},end:{line:129,column:47}},loc:{start:{line:129,column:58},end:{line:144,column:9}},line:129},"10":{name:"(anonymous_10)",decl:{start:{line:146,column:39},end:{line:146,column:40}},loc:{start:{line:146,column:45},end:{line:150,column:5}},line:146},"11":{name:"(anonymous_11)",decl:{start:{line:147,column:41},end:{line:147,column:42}},loc:{start:{line:147,column:53},end:{line:149,column:9}},line:147}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"ad80855ee5139481056d8914a06b2eeb37625564"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_zg3rlmfcu.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const fabric_shim_1=(cov_zg3rlmfcu.s[1]++,require("fabric-shim"));const ___test_helper_1=(cov_zg3rlmfcu.s[2]++,require("./___test-helper"));const chai=(cov_zg3rlmfcu.s[3]++,require("chai"));const chaiAsPromised=(cov_zg3rlmfcu.s[4]++,require("chai-as-promised"));const sinon=(cov_zg3rlmfcu.s[5]++,require("sinon"));const sinonChai=(cov_zg3rlmfcu.s[6]++,require("sinon-chai"));const winston=(cov_zg3rlmfcu.s[7]++,require("winston"));cov_zg3rlmfcu.s[8]++;chai.should();cov_zg3rlmfcu.s[9]++;chai.use(chaiAsPromised);cov_zg3rlmfcu.s[10]++;chai.use(sinonChai);class TestContext{constructor(){cov_zg3rlmfcu.f[0]++;cov_zg3rlmfcu.s[11]++;this.stub=sinon.createStubInstance(fabric_shim_1.ChaincodeStub);cov_zg3rlmfcu.s[12]++;this.clientIdentity=sinon.createStubInstance(fabric_shim_1.ClientIdentity);cov_zg3rlmfcu.s[13]++;this.logging={getLogger:sinon.stub().returns(sinon.createStubInstance(winston.createLogger().constructor)),setLevel:sinon.stub()};}}const unit_of_measure_contract_1=(cov_zg3rlmfcu.s[14]++,require("../contracts/unit-of-measure.contract"));const models_1=(cov_zg3rlmfcu.s[15]++,require("../models"));cov_zg3rlmfcu.s[16]++;describe('UnitOfMeasureContract',()=>{cov_zg3rlmfcu.f[1]++;let contract;let ctx;let sampleUOM=(cov_zg3rlmfcu.s[17]++,[]);cov_zg3rlmfcu.s[18]++;beforeEach(()=>{cov_zg3rlmfcu.f[2]++;cov_zg3rlmfcu.s[19]++;// Prepare the Contract and Context
contract=new unit_of_measure_contract_1.UnitOfMeasureContract();cov_zg3rlmfcu.s[20]++;ctx=new TestContext();cov_zg3rlmfcu.s[21]++;ctx.clientIdentity.getMSPID.returns('Org1MSP');// Load the sample data file
cov_zg3rlmfcu.s[22]++;sampleUOM=[{"RecordID":"DOES_EXIST","Description":"","SKU":"YYYYYYY","SKUGTIN":"","UnitHeight":100.00,"UnitLength":200.00,"UnitVolume":300.00,"UnitWeight":400.00,"UnitWidth":500.00,"UnitCost":0,"PalletCount":0,"CaseCount":1,"PackCount":1,"EachCount":3,"OtherCount":0,"UpdateDate":17012020,"OrderStandard":"Each"}];// Add Vendor List record, and record composite key creator
cov_zg3rlmfcu.s[23]++;ctx.stub.createCompositeKey.withArgs('uom',['DEFAULT']).returns(' uom DEFAULT');cov_zg3rlmfcu.s[24]++;ctx.stub.getPrivateData.withArgs(___test_helper_1.testPDCName,' uom DEFAULT').resolves(Buffer.from(JSON.stringify(new models_1.UnitOfMeasureList({Items:sampleUOM}))));// Add all records for the find search
let iterator=(cov_zg3rlmfcu.s[25]++,{close:async()=>{cov_zg3rlmfcu.f[3]++;cov_zg3rlmfcu.s[26]++;return;},next:async()=>{cov_zg3rlmfcu.f[4]++;cov_zg3rlmfcu.s[27]++;iterator['currentIndex']++;cov_zg3rlmfcu.s[28]++;return{value:{key:'uom',value:Buffer.from(JSON.stringify(iterator['allItems'][iterator['currentIndex']])),getKey:()=>{cov_zg3rlmfcu.f[5]++;cov_zg3rlmfcu.s[29]++;return'uom';},getValue:()=>{cov_zg3rlmfcu.f[6]++;cov_zg3rlmfcu.s[30]++;return Buffer.from(JSON.stringify(sampleUOM));}},done:iterator['allItems'].length==iterator['currentIndex']+1};}});cov_zg3rlmfcu.s[31]++;iterator['allItems']=sampleUOM;cov_zg3rlmfcu.s[32]++;iterator['currentIndex']=-1;cov_zg3rlmfcu.s[33]++;ctx.stub.getPrivateDataByPartialCompositeKey.withArgs(___test_helper_1.testPDCName,'uom',[]).resolves(iterator);});cov_zg3rlmfcu.s[34]++;describe('#saveUnitOfMeasure',()=>{cov_zg3rlmfcu.f[7]++;cov_zg3rlmfcu.s[35]++;it('should create a unit of measure',async()=>{cov_zg3rlmfcu.f[8]++;let newUOM=(cov_zg3rlmfcu.s[36]++,{RecordID:'DOES_NOT_EXIST',Description:'',SKU:'XXXXXXX',SKUGTIN:'',UnitHeight:100,UnitLength:200,UnitVolume:300,UnitWeight:400,UnitWidth:500});let resultUOM=(cov_zg3rlmfcu.s[37]++,await contract.saveUnitOfMeasure(ctx,[newUOM]));let finalUOM=(cov_zg3rlmfcu.s[38]++,[]);cov_zg3rlmfcu.s[39]++;finalUOM=[{"RecordID":"DOES_EXIST","Description":"","SKU":"YYYYYYY","SKUGTIN":"","UnitHeight":100.00,"UnitLength":200.00,"UnitVolume":300.00,"UnitWeight":400.00,"UnitWidth":500.00,"UnitCost":0,"PalletCount":0,"CaseCount":1,"PackCount":1,"EachCount":3,"OtherCount":0,"UpdateDate":17012020,"OrderStandard":"Each"},{"RecordID":"DOES_NOT_EXIST","Description":"","SKU":"XXXXXXX","SKUGTIN":"","UnitHeight":100,"UnitLength":200,"UnitVolume":300,"UnitWeight":400,"UnitWidth":500}];cov_zg3rlmfcu.s[40]++;ctx.stub.putPrivateData.should.have.been.calledOnceWithExactly(___test_helper_1.testPDCName,' uom DEFAULT',Buffer.from(JSON.stringify(new models_1.UnitOfMeasureList({Items:finalUOM}))));cov_zg3rlmfcu.s[41]++;chai.expect(resultUOM).to.deep.equal([newUOM]);});cov_zg3rlmfcu.s[42]++;it('should update a unit of measure',async()=>{cov_zg3rlmfcu.f[9]++;let updatedUOM=(cov_zg3rlmfcu.s[43]++,{RecordID:'DOES_EXIST',Description:'UPDATED DESCRIPTION',SKU:'YYYYYYY',SKUGTIN:'UPDATED SKUGTIN',UnitHeight:111.11,UnitLength:222.22,UnitVolume:333.33,UnitWeight:444.44,UnitWidth:555.55});let resultUOM=(cov_zg3rlmfcu.s[44]++,await contract.saveUnitOfMeasure(ctx,[updatedUOM]));cov_zg3rlmfcu.s[45]++;ctx.stub.putPrivateData.should.have.been.calledOnceWithExactly(___test_helper_1.testPDCName,' uom DEFAULT',Buffer.from(JSON.stringify(new models_1.UnitOfMeasureList({Items:[updatedUOM]}))));cov_zg3rlmfcu.s[46]++;chai.expect(resultUOM).to.deep.equal([updatedUOM]);});});cov_zg3rlmfcu.s[47]++;describe('#retrieveUnitOfMeasure',()=>{cov_zg3rlmfcu.f[10]++;cov_zg3rlmfcu.s[48]++;it('should return all UOM data',async()=>{cov_zg3rlmfcu.f[11]++;cov_zg3rlmfcu.s[49]++;await contract.retrieveUnitOfMeasure(ctx).should.eventually.deep.equal(sampleUOM);});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQzpcXFVzZXJzXFxQUkFLQVNIU0VMVkFSQUpcXEJsb2NrY2hhaW5cXEhvbWUgRGVwb3RcXERldmVsb3BtZW50XFxjaGFpbmNvZGVfMDkwMVxcc3JjXFxfX190ZXN0c19fX1xcdW5pdC1vZi1tZWFzdXJlLWNvbnRyYWN0LnNwZWMudHMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcUFJBS0FTSFNFTFZBUkFKXFxCbG9ja2NoYWluXFxIb21lIERlcG90XFxEZXZlbG9wbWVudFxcY2hhaW5jb2RlXzA5MDFcXHNyY1xcX19fdGVzdHNfX19cXHVuaXQtb2YtbWVhc3VyZS1jb250cmFjdC5zcGVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQ0EsNkNBQXVFO0FBQ3ZFLHFEQUErQztBQUkvQyw2QkFBNkI7QUFDN0IsbURBQW1EO0FBQ25ELCtCQUErQjtBQUMvQix3Q0FBd0M7QUFDeEMsbUNBQW9DO0FBRXBDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUNkLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7QUFDekIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUVwQixNQUFNLFdBQVc7SUFBakI7UUFDVyxTQUFJLEdBQThDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQywyQkFBYSxDQUFDLENBQUM7UUFDMUYsbUJBQWMsR0FBK0MsS0FBSyxDQUFDLGtCQUFrQixDQUFDLDRCQUFjLENBQUMsQ0FBQztRQUN0RyxZQUFPLEdBQUc7WUFDYixTQUFTLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsa0JBQWtCLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQzdGLFFBQVEsRUFBRSxLQUFLLENBQUMsSUFBSSxFQUFFO1NBQ3hCLENBQUM7SUFDUCxDQUFDO0NBQUE7QUFTRCxvRkFBOEU7QUFDOUUsc0NBQTZEO0FBRTdELFFBQVEsQ0FBQyx1QkFBdUIsRUFBRSxHQUFHLEVBQUU7SUFFbkMsSUFBSSxRQUErQixDQUFDO0lBQ3BDLElBQUksR0FBZ0IsQ0FBQztJQUVyQixJQUFJLFNBQVMsR0FBcUIsRUFBRSxDQUFDO0lBRXJDLFVBQVUsQ0FBQyxHQUFHLEVBQUU7UUFDWixtQ0FBbUM7UUFDbkMsUUFBUSxHQUFHLElBQUksZ0RBQXFCLEVBQUUsQ0FBQztRQUN2QyxHQUFHLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQztRQUN4QixHQUFHLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFL0MsNEJBQTRCO1FBQzVCLFNBQVMsR0FBRztZQUNSO2dCQUNJLFVBQVUsRUFBRSxZQUFZO2dCQUN4QixhQUFhLEVBQUUsRUFBRTtnQkFDakIsS0FBSyxFQUFFLFNBQVM7Z0JBQ2hCLFNBQVMsRUFBRSxFQUFFO2dCQUNiLFlBQVksRUFBRSxNQUFNO2dCQUNwQixZQUFZLEVBQUUsTUFBTTtnQkFDcEIsWUFBWSxFQUFFLE1BQU07Z0JBQ3BCLFlBQVksRUFBRSxNQUFNO2dCQUNwQixXQUFXLEVBQUcsTUFBTTtnQkFDcEIsVUFBVSxFQUFFLENBQUM7Z0JBQ2IsYUFBYSxFQUFFLENBQUM7Z0JBQ2hCLFdBQVcsRUFBRSxDQUFDO2dCQUNkLFdBQVcsRUFBRSxDQUFDO2dCQUNkLFdBQVcsRUFBRSxDQUFDO2dCQUNkLFlBQVksRUFBRSxDQUFDO2dCQUNmLFlBQVksRUFBRSxRQUFRO2dCQUN0QixlQUFlLEVBQUUsTUFBTTthQUUxQjtTQUNlLENBQUM7UUFFckIsMkRBQTJEO1FBQzNELEdBQUcsQ0FBQyxJQUFJLENBQUMsa0JBQWtCLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ2pGLEdBQUcsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQyw0QkFBVyxFQUFFLGNBQWMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSwwQkFBaUIsQ0FBQyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWpKLHNDQUFzQztRQUN0QyxJQUFJLFFBQVEsR0FBa0M7WUFDMUMsS0FBSyxFQUFFLEtBQUssSUFBSSxFQUFFLEdBQUcsT0FBTyxDQUFDLENBQUM7WUFDOUIsSUFBSSxFQUFFLEtBQUssSUFBSSxFQUFFO2dCQUNiLFFBQVEsQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDO2dCQUMzQixPQUFPO29CQUNILEtBQUssRUFBRzt3QkFDSixHQUFHLEVBQUUsS0FBSzt3QkFDVixLQUFLLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDO3dCQUNsRixNQUFNLEVBQUUsR0FBRSxFQUFFLENBQUEsS0FBSzt3QkFDakIsUUFBUSxFQUFFLEdBQUUsRUFBRSxDQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQztxQkFDdkM7b0JBQ2pCLElBQUksRUFBRyxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQyxNQUFNLElBQUksUUFBUSxDQUFDLGNBQWMsQ0FBQyxHQUFDLENBQUMsQ0FBQztpQkFDN0MsQ0FBQztZQUM5QixDQUFDO1NBQzRCLENBQUM7UUFFbEMsUUFBUSxDQUFDLFVBQVUsQ0FBQyxHQUFHLFNBQVMsQ0FBQztRQUNqQyxRQUFRLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFFOUIsR0FBRyxDQUFDLElBQUksQ0FBQyxtQ0FBbUMsQ0FBQyxRQUFRLENBQUMsNEJBQVcsRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ3JHLENBQUMsQ0FBQyxDQUFDO0lBRUgsUUFBUSxDQUFDLG9CQUFvQixFQUFFLEdBQUcsRUFBRTtRQUVoQyxFQUFFLENBQUMsaUNBQWlDLEVBQUUsS0FBSyxJQUFJLEVBQUU7WUFDN0MsSUFBSSxNQUFNLEdBQW1CO2dCQUN6QixRQUFRLEVBQUUsZ0JBQWdCO2dCQUMxQixXQUFXLEVBQUUsRUFBRTtnQkFDZixHQUFHLEVBQUUsU0FBUztnQkFDZCxPQUFPLEVBQUUsRUFBRTtnQkFDWCxVQUFVLEVBQUUsR0FBRztnQkFDZixVQUFVLEVBQUUsR0FBRztnQkFDZixVQUFVLEVBQUUsR0FBRztnQkFDZixVQUFVLEVBQUUsR0FBRztnQkFDZixTQUFTLEVBQUcsR0FBRzthQUNELENBQUM7WUFFbkIsSUFBSSxTQUFTLEdBQXFCLE1BQU0sUUFBUSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7WUFFbEYsSUFBSSxRQUFRLEdBQXFCLEVBQUUsQ0FBQztZQUVwQyxRQUFRLEdBQUc7Z0JBQ1A7b0JBQ0ksVUFBVSxFQUFFLFlBQVk7b0JBQ3hCLGFBQWEsRUFBRSxFQUFFO29CQUNqQixLQUFLLEVBQUUsU0FBUztvQkFDaEIsU0FBUyxFQUFFLEVBQUU7b0JBQ2IsWUFBWSxFQUFFLE1BQU07b0JBQ3BCLFlBQVksRUFBRSxNQUFNO29CQUNwQixZQUFZLEVBQUUsTUFBTTtvQkFDcEIsWUFBWSxFQUFFLE1BQU07b0JBQ3BCLFdBQVcsRUFBRyxNQUFNO29CQUNwQixVQUFVLEVBQUUsQ0FBQztvQkFDYixhQUFhLEVBQUUsQ0FBQztvQkFDaEIsV0FBVyxFQUFFLENBQUM7b0JBQ2QsV0FBVyxFQUFFLENBQUM7b0JBQ2QsV0FBVyxFQUFFLENBQUM7b0JBQ2QsWUFBWSxFQUFFLENBQUM7b0JBQ2YsWUFBWSxFQUFFLFFBQVE7b0JBQ3RCLGVBQWUsRUFBRSxNQUFNO2lCQUMxQjtnQkFDRDtvQkFDSSxVQUFVLEVBQUUsZ0JBQWdCO29CQUM1QixhQUFhLEVBQUUsRUFBRTtvQkFDakIsS0FBSyxFQUFFLFNBQVM7b0JBQ2hCLFNBQVMsRUFBRSxFQUFFO29CQUNiLFlBQVksRUFBRSxHQUFHO29CQUNqQixZQUFZLEVBQUUsR0FBRztvQkFDakIsWUFBWSxFQUFFLEdBQUc7b0JBQ2pCLFlBQVksRUFBRSxHQUFHO29CQUNqQixXQUFXLEVBQUUsR0FBRztpQkFDakI7YUFDYSxDQUFDO1lBRXJCLEdBQUcsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLDRCQUFXLEVBQUUsY0FBYyxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLDBCQUFpQixDQUFDLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDckssSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFDbkQsQ0FBQyxDQUFDLENBQUM7UUFFSCxFQUFFLENBQUMsaUNBQWlDLEVBQUUsS0FBSyxJQUFJLEVBQUU7WUFDN0MsSUFBSSxVQUFVLEdBQW1CO2dCQUM3QixRQUFRLEVBQUUsWUFBWTtnQkFDdEIsV0FBVyxFQUFFLHFCQUFxQjtnQkFDbEMsR0FBRyxFQUFFLFNBQVM7Z0JBQ2QsT0FBTyxFQUFFLGlCQUFpQjtnQkFDMUIsVUFBVSxFQUFFLE1BQU07Z0JBQ2xCLFVBQVUsRUFBRSxNQUFNO2dCQUNsQixVQUFVLEVBQUUsTUFBTTtnQkFDbEIsVUFBVSxFQUFFLE1BQU07Z0JBQ2xCLFNBQVMsRUFBRyxNQUFNO2FBQ0osQ0FBQztZQUVuQixJQUFJLFNBQVMsR0FBcUIsTUFBTSxRQUFRLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztZQUN0RixHQUFHLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyw0QkFBVyxFQUFFLGNBQWMsRUFBRSxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSwwQkFBaUIsQ0FBQyxFQUFFLEtBQUssRUFBRSxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUN6SyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQztRQUN2RCxDQUFDLENBQUMsQ0FBQztJQUVQLENBQUMsQ0FBQyxDQUFDO0lBRUgsUUFBUSxDQUFDLHdCQUF3QixFQUFFLEdBQUcsRUFBRTtRQUNwQyxFQUFFLENBQUMsNEJBQTRCLEVBQUUsS0FBSyxJQUFJLEVBQUU7WUFDeEMsTUFBTSxRQUFRLENBQUMscUJBQXFCLENBQUMsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3RGLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDLENBQUM7QUFHUCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnRleHQgfSBmcm9tICdmYWJyaWMtY29udHJhY3QtYXBpJztcclxuaW1wb3J0IHsgQ2hhaW5jb2RlU3R1YiwgQ2xpZW50SWRlbnRpdHksIEl0ZXJhdG9ycyB9IGZyb20gJ2ZhYnJpYy1zaGltJztcclxuaW1wb3J0IHsgdGVzdFBEQ05hbWUgfSBmcm9tICcuL19fX3Rlc3QtaGVscGVyJztcclxuXHJcbmltcG9ydCAqIGFzIGZzIGZyb20gJ2ZzJztcclxuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcclxuaW1wb3J0ICogYXMgY2hhaSBmcm9tICdjaGFpJztcclxuaW1wb3J0ICogYXMgY2hhaUFzUHJvbWlzZWQgZnJvbSAnY2hhaS1hcy1wcm9taXNlZCc7XHJcbmltcG9ydCAqIGFzIHNpbm9uIGZyb20gJ3Npbm9uJztcclxuaW1wb3J0ICogYXMgc2lub25DaGFpIGZyb20gJ3Npbm9uLWNoYWknO1xyXG5pbXBvcnQgd2luc3RvbiA9IHJlcXVpcmUoJ3dpbnN0b24nKTtcclxuXHJcbmNoYWkuc2hvdWxkKCk7XHJcbmNoYWkudXNlKGNoYWlBc1Byb21pc2VkKTtcclxuY2hhaS51c2Uoc2lub25DaGFpKTtcclxuXHJcbmNsYXNzIFRlc3RDb250ZXh0IGltcGxlbWVudHMgQ29udGV4dCB7XHJcbiAgICBwdWJsaWMgc3R1Yjogc2lub24uU2lub25TdHViYmVkSW5zdGFuY2U8Q2hhaW5jb2RlU3R1Yj4gPSBzaW5vbi5jcmVhdGVTdHViSW5zdGFuY2UoQ2hhaW5jb2RlU3R1Yik7XHJcbiAgICBwdWJsaWMgY2xpZW50SWRlbnRpdHk6IHNpbm9uLlNpbm9uU3R1YmJlZEluc3RhbmNlPENsaWVudElkZW50aXR5PiA9IHNpbm9uLmNyZWF0ZVN0dWJJbnN0YW5jZShDbGllbnRJZGVudGl0eSk7XHJcbiAgICBwdWJsaWMgbG9nZ2luZyA9IHtcclxuICAgICAgICBnZXRMb2dnZXI6IHNpbm9uLnN0dWIoKS5yZXR1cm5zKHNpbm9uLmNyZWF0ZVN0dWJJbnN0YW5jZSh3aW5zdG9uLmNyZWF0ZUxvZ2dlcigpLmNvbnN0cnVjdG9yKSksXHJcbiAgICAgICAgc2V0TGV2ZWw6IHNpbm9uLnN0dWIoKSxcclxuICAgICB9O1xyXG59XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuaW1wb3J0IHsgVW5pdE9mTWVhc3VyZUNvbnRyYWN0IH0gZnJvbSAnLi4vY29udHJhY3RzL3VuaXQtb2YtbWVhc3VyZS5jb250cmFjdCc7XHJcbmltcG9ydCB7IFVuaXRPZk1lYXN1cmUsIFVuaXRPZk1lYXN1cmVMaXN0IH0gZnJvbSAnLi4vbW9kZWxzJztcclxuXHJcbmRlc2NyaWJlKCdVbml0T2ZNZWFzdXJlQ29udHJhY3QnLCAoKSA9PiB7XHJcblxyXG4gICAgbGV0IGNvbnRyYWN0OiBVbml0T2ZNZWFzdXJlQ29udHJhY3Q7XHJcbiAgICBsZXQgY3R4OiBUZXN0Q29udGV4dDtcclxuXHJcbiAgICBsZXQgc2FtcGxlVU9NIDogVW5pdE9mTWVhc3VyZVtdID0gW107XHJcblxyXG4gICAgYmVmb3JlRWFjaCgoKSA9PiB7XHJcbiAgICAgICAgLy8gUHJlcGFyZSB0aGUgQ29udHJhY3QgYW5kIENvbnRleHRcclxuICAgICAgICBjb250cmFjdCA9IG5ldyBVbml0T2ZNZWFzdXJlQ29udHJhY3QoKTtcclxuICAgICAgICBjdHggPSBuZXcgVGVzdENvbnRleHQoKTtcclxuICAgICAgICBjdHguY2xpZW50SWRlbnRpdHkuZ2V0TVNQSUQucmV0dXJucygnT3JnMU1TUCcpO1xyXG5cclxuICAgICAgICAvLyBMb2FkIHRoZSBzYW1wbGUgZGF0YSBmaWxlXHJcbiAgICAgICAgc2FtcGxlVU9NID0gW1xyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBcIlJlY29yZElEXCI6IFwiRE9FU19FWElTVFwiLFxyXG4gICAgICAgICAgICAgICAgXCJEZXNjcmlwdGlvblwiOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgXCJTS1VcIjogXCJZWVlZWVlZXCIsXHJcbiAgICAgICAgICAgICAgICBcIlNLVUdUSU5cIjogXCJcIixcclxuICAgICAgICAgICAgICAgIFwiVW5pdEhlaWdodFwiOiAxMDAuMDAsXHJcbiAgICAgICAgICAgICAgICBcIlVuaXRMZW5ndGhcIjogMjAwLjAwLFxyXG4gICAgICAgICAgICAgICAgXCJVbml0Vm9sdW1lXCI6IDMwMC4wMCxcclxuICAgICAgICAgICAgICAgIFwiVW5pdFdlaWdodFwiOiA0MDAuMDAsXHJcbiAgICAgICAgICAgICAgICBcIlVuaXRXaWR0aFwiOiAgNTAwLjAwLFxyXG4gICAgICAgICAgICAgICAgXCJVbml0Q29zdFwiOiAwLFxyXG4gICAgICAgICAgICAgICAgXCJQYWxsZXRDb3VudFwiOiAwLFxyXG4gICAgICAgICAgICAgICAgXCJDYXNlQ291bnRcIjogMSxcclxuICAgICAgICAgICAgICAgIFwiUGFja0NvdW50XCI6IDEsXHJcbiAgICAgICAgICAgICAgICBcIkVhY2hDb3VudFwiOiAzLFxyXG4gICAgICAgICAgICAgICAgXCJPdGhlckNvdW50XCI6IDAsXHJcbiAgICAgICAgICAgICAgICBcIlVwZGF0ZURhdGVcIjogMTcwMTIwMjAsXHJcbiAgICAgICAgICAgICAgICBcIk9yZGVyU3RhbmRhcmRcIjogXCJFYWNoXCJcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdIGFzIFVuaXRPZk1lYXN1cmVbXTtcclxuXHJcbiAgICAgICAgLy8gQWRkIFZlbmRvciBMaXN0IHJlY29yZCwgYW5kIHJlY29yZCBjb21wb3NpdGUga2V5IGNyZWF0b3JcclxuICAgICAgICBjdHguc3R1Yi5jcmVhdGVDb21wb3NpdGVLZXkud2l0aEFyZ3MoJ3VvbScsIFsnREVGQVVMVCddKS5yZXR1cm5zKCcgdW9tIERFRkFVTFQnKTtcclxuICAgICAgICBjdHguc3R1Yi5nZXRQcml2YXRlRGF0YS53aXRoQXJncyh0ZXN0UERDTmFtZSwgJyB1b20gREVGQVVMVCcpLnJlc29sdmVzKEJ1ZmZlci5mcm9tKEpTT04uc3RyaW5naWZ5KG5ldyBVbml0T2ZNZWFzdXJlTGlzdCh7IEl0ZW1zOiBzYW1wbGVVT00gfSkpKSk7XHJcblxyXG4gICAgICAgIC8vIEFkZCBhbGwgcmVjb3JkcyBmb3IgdGhlIGZpbmQgc2VhcmNoXHJcbiAgICAgICAgbGV0IGl0ZXJhdG9yIDogSXRlcmF0b3JzLlN0YXRlUXVlcnlJdGVyYXRvciA9IHtcclxuICAgICAgICAgICAgY2xvc2U6IGFzeW5jICgpID0+IHsgcmV0dXJuOyB9LFxyXG4gICAgICAgICAgICBuZXh0OiBhc3luYyAoKSA9PiB7IFxyXG4gICAgICAgICAgICAgICAgaXRlcmF0b3JbJ2N1cnJlbnRJbmRleCddKys7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlIDoge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk6ICd1b20nLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogQnVmZmVyLmZyb20oSlNPTi5zdHJpbmdpZnkoaXRlcmF0b3JbJ2FsbEl0ZW1zJ11baXRlcmF0b3JbJ2N1cnJlbnRJbmRleCddXSkpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBnZXRLZXk6ICgpPT4ndW9tJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0VmFsdWU6ICgpPT5CdWZmZXIuZnJvbShKU09OLnN0cmluZ2lmeShzYW1wbGVVT00pKVxyXG4gICAgICAgICAgICAgICAgICAgIH0gYXMgSXRlcmF0b3JzLktWLFxyXG4gICAgICAgICAgICAgICAgICAgIGRvbmUgOiAoaXRlcmF0b3JbJ2FsbEl0ZW1zJ10ubGVuZ3RoID09IGl0ZXJhdG9yWydjdXJyZW50SW5kZXgnXSsxKVxyXG4gICAgICAgICAgICAgICAgfSBhcyBJdGVyYXRvcnMuTmV4dFJlc3VsdDsgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGFzIEl0ZXJhdG9ycy5TdGF0ZVF1ZXJ5SXRlcmF0b3I7XHJcblxyXG4gICAgICAgIGl0ZXJhdG9yWydhbGxJdGVtcyddID0gc2FtcGxlVU9NO1xyXG4gICAgICAgIGl0ZXJhdG9yWydjdXJyZW50SW5kZXgnXSA9IC0xO1xyXG5cclxuICAgICAgICBjdHguc3R1Yi5nZXRQcml2YXRlRGF0YUJ5UGFydGlhbENvbXBvc2l0ZUtleS53aXRoQXJncyh0ZXN0UERDTmFtZSwgJ3VvbScsIFtdKS5yZXNvbHZlcyhpdGVyYXRvcik7XHJcbiAgICB9KTtcclxuXHJcbiAgICBkZXNjcmliZSgnI3NhdmVVbml0T2ZNZWFzdXJlJywgKCkgPT4ge1xyXG5cclxuICAgICAgICBpdCgnc2hvdWxkIGNyZWF0ZSBhIHVuaXQgb2YgbWVhc3VyZScsIGFzeW5jICgpID0+IHtcclxuICAgICAgICAgICAgbGV0IG5ld1VPTSA6IFVuaXRPZk1lYXN1cmUgPSB7XHJcbiAgICAgICAgICAgICAgICBSZWNvcmRJRDogJ0RPRVNfTk9UX0VYSVNUJyxcclxuICAgICAgICAgICAgICAgIERlc2NyaXB0aW9uOiAnJyxcclxuICAgICAgICAgICAgICAgIFNLVTogJ1hYWFhYWFgnLFxyXG4gICAgICAgICAgICAgICAgU0tVR1RJTjogJycsXHJcbiAgICAgICAgICAgICAgICBVbml0SGVpZ2h0OiAxMDAsXHJcbiAgICAgICAgICAgICAgICBVbml0TGVuZ3RoOiAyMDAsXHJcbiAgICAgICAgICAgICAgICBVbml0Vm9sdW1lOiAzMDAsXHJcbiAgICAgICAgICAgICAgICBVbml0V2VpZ2h0OiA0MDAsXHJcbiAgICAgICAgICAgICAgICBVbml0V2lkdGg6ICA1MDBcclxuICAgICAgICAgICAgfSBhcyBVbml0T2ZNZWFzdXJlO1xyXG5cclxuICAgICAgICAgICAgbGV0IHJlc3VsdFVPTSA6IFVuaXRPZk1lYXN1cmVbXSA9IGF3YWl0IGNvbnRyYWN0LnNhdmVVbml0T2ZNZWFzdXJlKGN0eCwgW25ld1VPTV0pO1xyXG5cclxuICAgICAgICAgICAgbGV0IGZpbmFsVU9NIDogVW5pdE9mTWVhc3VyZVtdID0gW107XHJcblxyXG4gICAgICAgICAgICBmaW5hbFVPTSA9IFtcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcIlJlY29yZElEXCI6IFwiRE9FU19FWElTVFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiRGVzY3JpcHRpb25cIjogXCJcIixcclxuICAgICAgICAgICAgICAgICAgICBcIlNLVVwiOiBcIllZWVlZWVlcIixcclxuICAgICAgICAgICAgICAgICAgICBcIlNLVUdUSU5cIjogXCJcIixcclxuICAgICAgICAgICAgICAgICAgICBcIlVuaXRIZWlnaHRcIjogMTAwLjAwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiVW5pdExlbmd0aFwiOiAyMDAuMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJVbml0Vm9sdW1lXCI6IDMwMC4wMCxcclxuICAgICAgICAgICAgICAgICAgICBcIlVuaXRXZWlnaHRcIjogNDAwLjAwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiVW5pdFdpZHRoXCI6ICA1MDAuMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJVbml0Q29zdFwiOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiUGFsbGV0Q291bnRcIjogMCxcclxuICAgICAgICAgICAgICAgICAgICBcIkNhc2VDb3VudFwiOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiUGFja0NvdW50XCI6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJFYWNoQ291bnRcIjogMyxcclxuICAgICAgICAgICAgICAgICAgICBcIk90aGVyQ291bnRcIjogMCxcclxuICAgICAgICAgICAgICAgICAgICBcIlVwZGF0ZURhdGVcIjogMTcwMTIwMjAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJPcmRlclN0YW5kYXJkXCI6IFwiRWFjaFwiXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwiUmVjb3JkSURcIjogXCJET0VTX05PVF9FWElTVFwiLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiRGVzY3JpcHRpb25cIjogXCJcIixcclxuICAgICAgICAgICAgICAgICAgICBcIlNLVVwiOiBcIlhYWFhYWFhcIixcclxuICAgICAgICAgICAgICAgICAgICBcIlNLVUdUSU5cIjogXCJcIixcclxuICAgICAgICAgICAgICAgICAgICBcIlVuaXRIZWlnaHRcIjogMTAwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiVW5pdExlbmd0aFwiOiAyMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJVbml0Vm9sdW1lXCI6IDMwMCxcclxuICAgICAgICAgICAgICAgICAgICBcIlVuaXRXZWlnaHRcIjogNDAwLFxyXG4gICAgICAgICAgICAgICAgICAgIFwiVW5pdFdpZHRoXCI6IDUwMFxyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF0gYXMgVW5pdE9mTWVhc3VyZVtdO1xyXG5cclxuICAgICAgICAgICAgY3R4LnN0dWIucHV0UHJpdmF0ZURhdGEuc2hvdWxkLmhhdmUuYmVlbi5jYWxsZWRPbmNlV2l0aEV4YWN0bHkodGVzdFBEQ05hbWUsICcgdW9tIERFRkFVTFQnLCBCdWZmZXIuZnJvbShKU09OLnN0cmluZ2lmeShuZXcgVW5pdE9mTWVhc3VyZUxpc3QoeyBJdGVtczogZmluYWxVT00gfSkpKSk7XHJcbiAgICAgICAgICAgIGNoYWkuZXhwZWN0KHJlc3VsdFVPTSkudG8uZGVlcC5lcXVhbChbbmV3VU9NXSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGl0KCdzaG91bGQgdXBkYXRlIGEgdW5pdCBvZiBtZWFzdXJlJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgdXBkYXRlZFVPTSA6IFVuaXRPZk1lYXN1cmUgPSB7XHJcbiAgICAgICAgICAgICAgICBSZWNvcmRJRDogJ0RPRVNfRVhJU1QnLFxyXG4gICAgICAgICAgICAgICAgRGVzY3JpcHRpb246ICdVUERBVEVEIERFU0NSSVBUSU9OJyxcclxuICAgICAgICAgICAgICAgIFNLVTogJ1lZWVlZWVknLFxyXG4gICAgICAgICAgICAgICAgU0tVR1RJTjogJ1VQREFURUQgU0tVR1RJTicsXHJcbiAgICAgICAgICAgICAgICBVbml0SGVpZ2h0OiAxMTEuMTEsXHJcbiAgICAgICAgICAgICAgICBVbml0TGVuZ3RoOiAyMjIuMjIsXHJcbiAgICAgICAgICAgICAgICBVbml0Vm9sdW1lOiAzMzMuMzMsXHJcbiAgICAgICAgICAgICAgICBVbml0V2VpZ2h0OiA0NDQuNDQsXHJcbiAgICAgICAgICAgICAgICBVbml0V2lkdGg6ICA1NTUuNTVcclxuICAgICAgICAgICAgfSBhcyBVbml0T2ZNZWFzdXJlO1xyXG5cclxuICAgICAgICAgICAgbGV0IHJlc3VsdFVPTSA6IFVuaXRPZk1lYXN1cmVbXSA9IGF3YWl0IGNvbnRyYWN0LnNhdmVVbml0T2ZNZWFzdXJlKGN0eCwgW3VwZGF0ZWRVT01dKTtcclxuICAgICAgICAgICAgY3R4LnN0dWIucHV0UHJpdmF0ZURhdGEuc2hvdWxkLmhhdmUuYmVlbi5jYWxsZWRPbmNlV2l0aEV4YWN0bHkodGVzdFBEQ05hbWUsICcgdW9tIERFRkFVTFQnLCBCdWZmZXIuZnJvbShKU09OLnN0cmluZ2lmeShuZXcgVW5pdE9mTWVhc3VyZUxpc3QoeyBJdGVtczogW3VwZGF0ZWRVT01dIH0pKSkpO1xyXG4gICAgICAgICAgICBjaGFpLmV4cGVjdChyZXN1bHRVT00pLnRvLmRlZXAuZXF1YWwoW3VwZGF0ZWRVT01dKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICB9KTtcclxuXHJcbiAgICBkZXNjcmliZSgnI3JldHJpZXZlVW5pdE9mTWVhc3VyZScsICgpID0+IHtcclxuICAgICAgICBpdCgnc2hvdWxkIHJldHVybiBhbGwgVU9NIGRhdGEnLCBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgICAgIGF3YWl0IGNvbnRyYWN0LnJldHJpZXZlVW5pdE9mTWVhc3VyZShjdHgpLnNob3VsZC5ldmVudHVhbGx5LmRlZXAuZXF1YWwoc2FtcGxlVU9NKTtcclxuICAgICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuXHJcbn0pO1xyXG4iXX0=