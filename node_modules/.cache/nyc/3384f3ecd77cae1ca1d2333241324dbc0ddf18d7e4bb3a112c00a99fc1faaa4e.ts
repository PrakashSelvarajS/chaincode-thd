"use strict";var cov_dxtxo4p3k=function(){var path="C:\\Users\\PRAKASHSELVARAJ\\Blockchain\\Home Depot\\Development\\chaincode_0901\\src\\___tests___\\invoice-contract.spec.ts";var hash="713604705b50de726a47de02ac9fd159e31b5f40";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\PRAKASHSELVARAJ\\Blockchain\\Home Depot\\Development\\chaincode_0901\\src\\___tests___\\invoice-contract.spec.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:25},end:{line:3,column:52}},"2":{start:{line:4,column:13},end:{line:4,column:28}},"3":{start:{line:5,column:23},end:{line:5,column:50}},"4":{start:{line:6,column:18},end:{line:6,column:39}},"5":{start:{line:7,column:0},end:{line:7,column:14}},"6":{start:{line:8,column:0},end:{line:8,column:25}},"7":{start:{line:9,column:0},end:{line:9,column:20}},"8":{start:{line:10,column:12},end:{line:10,column:25}},"9":{start:{line:11,column:19},end:{line:11,column:25}},"10":{start:{line:12,column:28},end:{line:12,column:37}},"11":{start:{line:13,column:0},end:{line:59,column:3}},"12":{start:{line:16,column:4},end:{line:20,column:7}},"13":{start:{line:18,column:8},end:{line:18,column:45}},"14":{start:{line:19,column:8},end:{line:19,column:49}},"15":{start:{line:21,column:4},end:{line:58,column:7}},"16":{start:{line:22,column:8},end:{line:27,column:11}},"17":{start:{line:23,column:29},end:{line:23,column:113}},"18":{start:{line:24,column:27},end:{line:24,column:112}},"19":{start:{line:25,column:12},end:{line:25,column:186}},"20":{start:{line:26,column:12},end:{line:26,column:67}},"21":{start:{line:28,column:8},end:{line:33,column:11}},"22":{start:{line:29,column:29},end:{line:29,column:113}},"23":{start:{line:30,column:27},end:{line:30,column:112}},"24":{start:{line:31,column:12},end:{line:31,column:186}},"25":{start:{line:32,column:12},end:{line:32,column:67}},"26":{start:{line:34,column:8},end:{line:39,column:11}},"27":{start:{line:35,column:29},end:{line:35,column:113}},"28":{start:{line:36,column:27},end:{line:36,column:112}},"29":{start:{line:37,column:12},end:{line:37,column:186}},"30":{start:{line:38,column:12},end:{line:38,column:67}},"31":{start:{line:40,column:8},end:{line:45,column:11}},"32":{start:{line:41,column:29},end:{line:41,column:113}},"33":{start:{line:42,column:27},end:{line:42,column:112}},"34":{start:{line:43,column:12},end:{line:43,column:186}},"35":{start:{line:44,column:12},end:{line:44,column:67}},"36":{start:{line:46,column:8},end:{line:51,column:11}},"37":{start:{line:47,column:29},end:{line:47,column:113}},"38":{start:{line:48,column:27},end:{line:48,column:112}},"39":{start:{line:49,column:12},end:{line:49,column:186}},"40":{start:{line:50,column:12},end:{line:50,column:67}},"41":{start:{line:52,column:8},end:{line:57,column:11}},"42":{start:{line:53,column:29},end:{line:53,column:113}},"43":{start:{line:54,column:27},end:{line:54,column:112}},"44":{start:{line:55,column:12},end:{line:55,column:186}},"45":{start:{line:56,column:12},end:{line:56,column:67}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:28},end:{line:13,column:29}},loc:{start:{line:13,column:34},end:{line:59,column:1}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:16,column:15},end:{line:16,column:16}},loc:{start:{line:16,column:21},end:{line:20,column:5}},line:16},"2":{name:"(anonymous_2)",decl:{start:{line:21,column:29},end:{line:21,column:30}},loc:{start:{line:21,column:35},end:{line:58,column:5}},line:21},"3":{name:"(anonymous_3)",decl:{start:{line:22,column:78},end:{line:22,column:79}},loc:{start:{line:22,column:90},end:{line:27,column:9}},line:22},"4":{name:"(anonymous_4)",decl:{start:{line:28,column:88},end:{line:28,column:89}},loc:{start:{line:28,column:100},end:{line:33,column:9}},line:28},"5":{name:"(anonymous_5)",decl:{start:{line:34,column:95},end:{line:34,column:96}},loc:{start:{line:34,column:107},end:{line:39,column:9}},line:34},"6":{name:"(anonymous_6)",decl:{start:{line:40,column:104},end:{line:40,column:105}},loc:{start:{line:40,column:116},end:{line:45,column:9}},line:40},"7":{name:"(anonymous_7)",decl:{start:{line:46,column:109},end:{line:46,column:110}},loc:{start:{line:46,column:121},end:{line:51,column:9}},line:46},"8":{name:"(anonymous_8)",decl:{start:{line:52,column:121},end:{line:52,column:122}},loc:{start:{line:52,column:133},end:{line:57,column:9}},line:52}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"713604705b50de726a47de02ac9fd159e31b5f40"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_dxtxo4p3k.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const ___test_helper_1=(cov_dxtxo4p3k.s[1]++,require("./___test-helper"));const chai=(cov_dxtxo4p3k.s[2]++,require("chai"));const chaiAsPromised=(cov_dxtxo4p3k.s[3]++,require("chai-as-promised"));const sinonChai=(cov_dxtxo4p3k.s[4]++,require("sinon-chai"));cov_dxtxo4p3k.s[5]++;chai.should();cov_dxtxo4p3k.s[6]++;chai.use(chaiAsPromised);cov_dxtxo4p3k.s[7]++;chai.use(sinonChai);const __1=(cov_dxtxo4p3k.s[8]++,require(".."));const objectType=(cov_dxtxo4p3k.s[9]++,' ap ');const testconfigSubFolder=(cov_dxtxo4p3k.s[10]++,'invoice');cov_dxtxo4p3k.s[11]++;describe('InvoiceContract',()=>{cov_dxtxo4p3k.f[0]++;let contract;let ctx;cov_dxtxo4p3k.s[12]++;beforeEach(()=>{cov_dxtxo4p3k.f[1]++;cov_dxtxo4p3k.s[13]++;// Prepare the Contract and Context
contract=new __1.InvoiceContract();cov_dxtxo4p3k.s[14]++;ctx=new ___test_helper_1.TestContext();});cov_dxtxo4p3k.s[15]++;describe('#saveInvoice',()=>{cov_dxtxo4p3k.f[2]++;cov_dxtxo4p3k.s[16]++;it('BR-INV-001 should create a procurement record for new poNumbers',async()=>{cov_dxtxo4p3k.f[3]++;let testConfig=(cov_dxtxo4p3k.s[17]++,___test_helper_1.TestHelper.loadAPTestConfig('BR-INV-001',ctx,testconfigSubFolder));let resultAP=(cov_dxtxo4p3k.s[18]++,await contract.saveInvoice(ctx,testConfig.input.PONumber,testConfig.input.Invoices));cov_dxtxo4p3k.s[19]++;ctx.stub.putPrivateData.should.have.been.calledOnceWith(___test_helper_1.testPDCName,objectType+testConfig.input.PONumber,Buffer.from(JSON.stringify(testConfig.output)));cov_dxtxo4p3k.s[20]++;chai.expect(testConfig.output).to.deep.equal(resultAP);});cov_dxtxo4p3k.s[21]++;it('BR-INV-002 should add unique new Invoice data into previous imported data',async()=>{cov_dxtxo4p3k.f[4]++;let testConfig=(cov_dxtxo4p3k.s[22]++,___test_helper_1.TestHelper.loadAPTestConfig('BR-INV-002',ctx,testconfigSubFolder));let resultAP=(cov_dxtxo4p3k.s[23]++,await contract.saveInvoice(ctx,testConfig.input.PONumber,testConfig.input.Invoices));cov_dxtxo4p3k.s[24]++;ctx.stub.putPrivateData.should.have.been.calledOnceWith(___test_helper_1.testPDCName,objectType+testConfig.input.PONumber,Buffer.from(JSON.stringify(testConfig.output)));cov_dxtxo4p3k.s[25]++;chai.expect(testConfig.output).to.deep.equal(resultAP);});cov_dxtxo4p3k.s[26]++;it('BR-INV-003 should replace matching, existing Invoice data with new imported data',async()=>{cov_dxtxo4p3k.f[5]++;let testConfig=(cov_dxtxo4p3k.s[27]++,___test_helper_1.TestHelper.loadAPTestConfig('BR-INV-003',ctx,testconfigSubFolder));let resultAP=(cov_dxtxo4p3k.s[28]++,await contract.saveInvoice(ctx,testConfig.input.PONumber,testConfig.input.Invoices));cov_dxtxo4p3k.s[29]++;ctx.stub.putPrivateData.should.have.been.calledOnceWith(___test_helper_1.testPDCName,objectType+testConfig.input.PONumber,Buffer.from(JSON.stringify(testConfig.output)));cov_dxtxo4p3k.s[30]++;chai.expect(testConfig.output).to.deep.equal(resultAP);});cov_dxtxo4p3k.s[31]++;it('BR-INV-004 should uniquely identify Invoice data for matching new data with existing data',async()=>{cov_dxtxo4p3k.f[6]++;let testConfig=(cov_dxtxo4p3k.s[32]++,___test_helper_1.TestHelper.loadAPTestConfig('BR-INV-004',ctx,testconfigSubFolder));let resultAP=(cov_dxtxo4p3k.s[33]++,await contract.saveInvoice(ctx,testConfig.input.PONumber,testConfig.input.Invoices));cov_dxtxo4p3k.s[34]++;ctx.stub.putPrivateData.should.have.been.calledOnceWith(___test_helper_1.testPDCName,objectType+testConfig.input.PONumber,Buffer.from(JSON.stringify(testConfig.output)));cov_dxtxo4p3k.s[35]++;chai.expect(testConfig.output).to.deep.equal(resultAP);});cov_dxtxo4p3k.s[36]++;it('BR-INV-005 should flag when the Purchase Order data is missing for this PO Number (Missing PO)',async()=>{cov_dxtxo4p3k.f[7]++;let testConfig=(cov_dxtxo4p3k.s[37]++,___test_helper_1.TestHelper.loadAPTestConfig('BR-INV-005',ctx,testconfigSubFolder));let resultAP=(cov_dxtxo4p3k.s[38]++,await contract.saveInvoice(ctx,testConfig.input.PONumber,testConfig.input.Invoices));cov_dxtxo4p3k.s[39]++;ctx.stub.putPrivateData.should.have.been.calledOnceWith(___test_helper_1.testPDCName,objectType+testConfig.input.PONumber,Buffer.from(JSON.stringify(testConfig.output)));cov_dxtxo4p3k.s[40]++;chai.expect(testConfig.output).to.deep.equal(resultAP);});cov_dxtxo4p3k.s[41]++;it('BR-INV-006 should flag when the Vendor Shipped data is missing for this PO Number (Missing Vendor Shipped)',async()=>{cov_dxtxo4p3k.f[8]++;let testConfig=(cov_dxtxo4p3k.s[42]++,___test_helper_1.TestHelper.loadAPTestConfig('BR-INV-006',ctx,testconfigSubFolder));let resultAP=(cov_dxtxo4p3k.s[43]++,await contract.saveInvoice(ctx,testConfig.input.PONumber,testConfig.input.Invoices));cov_dxtxo4p3k.s[44]++;ctx.stub.putPrivateData.should.have.been.calledOnceWith(___test_helper_1.testPDCName,objectType+testConfig.input.PONumber,Buffer.from(JSON.stringify(testConfig.output)));cov_dxtxo4p3k.s[45]++;chai.expect(testConfig.output).to.deep.equal(resultAP);});});});//# sourceMappingURL=data:application/json;charset=utf-8;base64,