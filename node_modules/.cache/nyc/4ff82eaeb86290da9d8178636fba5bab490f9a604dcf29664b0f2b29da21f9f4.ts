"use strict";var cov_1sfl8dbvcs=function(){var path="C:\\Users\\PRAKASHSELVARAJ\\Blockchain\\Home Depot\\Development\\chaincode_0901\\src\\contracts\\ifc-shipped.contract.ts";var hash="9d101309caf573fa98ed81e684e41a2f84f4c846";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\PRAKASHSELVARAJ\\Blockchain\\Home Depot\\Development\\chaincode_0901\\src\\contracts\\ifc-shipped.contract.ts",statementMap:{"0":{start:{line:2,column:17},end:{line:7,column:1}},"1":{start:{line:3,column:12},end:{line:3,column:28}},"2":{start:{line:3,column:34},end:{line:3,column:125}},"3":{start:{line:4,column:4},end:{line:5,column:150}},"4":{start:{line:4,column:79},end:{line:4,column:131}},"5":{start:{line:5,column:9},end:{line:5,column:150}},"6":{start:{line:5,column:22},end:{line:5,column:43}},"7":{start:{line:5,column:58},end:{line:5,column:150}},"8":{start:{line:5,column:81},end:{line:5,column:150}},"9":{start:{line:6,column:4},end:{line:6,column:66}},"10":{start:{line:8,column:17},end:{line:10,column:1}},"11":{start:{line:9,column:4},end:{line:9,column:109}},"12":{start:{line:9,column:79},end:{line:9,column:109}},"13":{start:{line:11,column:0},end:{line:11,column:62}},"14":{start:{line:12,column:30},end:{line:12,column:60}},"15":{start:{line:13,column:17},end:{line:13,column:37}},"16":{start:{line:14,column:23},end:{line:14,column:49}},"17":{start:{line:15,column:28},end:{line:15,column:59}},"18":{start:{line:16,column:15},end:{line:16,column:35}},"19":{start:{line:17,column:15},end:{line:17,column:70}},"20":{start:{line:18,column:25},end:{line:134,column:1}},"21":{start:{line:19,column:20},end:{line:19,column:74}},"22":{start:{line:22,column:8},end:{line:39,column:9}},"23":{start:{line:24,column:12},end:{line:26,column:13}},"24":{start:{line:25,column:16},end:{line:25,column:84}},"25":{start:{line:28,column:22},end:{line:28,column:24}},"26":{start:{line:29,column:12},end:{line:32,column:13}},"27":{start:{line:30,column:37},end:{line:30,column:118}},"28":{start:{line:31,column:16},end:{line:31,column:41}},"29":{start:{line:33,column:12},end:{line:33,column:23}},"30":{start:{line:36,column:12},end:{line:36,column:54}},"31":{start:{line:37,column:12},end:{line:37,column:28}},"32":{start:{line:38,column:12},end:{line:38,column:19}},"33":{start:{line:43,column:8},end:{line:132,column:9}},"34":{start:{line:45,column:12},end:{line:45,column:39}},"35":{start:{line:46,column:12},end:{line:48,column:13}},"36":{start:{line:47,column:16},end:{line:47,column:113}},"37":{start:{line:49,column:12},end:{line:51,column:13}},"38":{start:{line:49,column:54},end:{line:49,column:86}},"39":{start:{line:50,column:16},end:{line:50,column:127}},"40":{start:{line:52,column:25},end:{line:52,column:75}},"41":{start:{line:54,column:21},end:{line:54,column:74}},"42":{start:{line:55,column:26},end:{line:55,column:30}},"43":{start:{line:56,column:12},end:{line:61,column:13}},"44":{start:{line:57,column:16},end:{line:57,column:60}},"45":{start:{line:58,column:16},end:{line:58,column:48}},"46":{start:{line:59,column:16},end:{line:59,column:32}},"47":{start:{line:60,column:16},end:{line:60,column:58}},"48":{start:{line:63,column:12},end:{line:63,column:61}},"49":{start:{line:64,column:26},end:{line:64,column:91}},"50":{start:{line:65,column:12},end:{line:67,column:13}},"51":{start:{line:66,column:16},end:{line:66,column:72}},"52":{start:{line:68,column:12},end:{line:68,column:47}},"53":{start:{line:70,column:12},end:{line:70,column:62}},"54":{start:{line:71,column:30},end:{line:71,column:89}},"55":{start:{line:72,column:12},end:{line:74,column:13}},"56":{start:{line:73,column:16},end:{line:73,column:70}},"57":{start:{line:75,column:12},end:{line:75,column:51}},"58":{start:{line:77,column:12},end:{line:77,column:146}},"59":{start:{line:78,column:12},end:{line:111,column:13}},"60":{start:{line:80,column:16},end:{line:80,column:90}},"61":{start:{line:81,column:16},end:{line:89,column:19}},"62":{start:{line:82,column:46},end:{line:84,column:22}},"63":{start:{line:83,column:24},end:{line:83,column:253}},"64":{start:{line:85,column:20},end:{line:88,column:21}},"65":{start:{line:86,column:24},end:{line:86,column:85}},"66":{start:{line:87,column:24},end:{line:87,column:65}},"67":{start:{line:91,column:33},end:{line:100,column:22}},"68":{start:{line:92,column:46},end:{line:94,column:22}},"69":{start:{line:93,column:24},end:{line:93,column:253}},"70":{start:{line:95,column:20},end:{line:98,column:21}},"71":{start:{line:96,column:24},end:{line:96,column:94}},"72":{start:{line:97,column:24},end:{line:97,column:37}},"73":{start:{line:99,column:20},end:{line:99,column:31}},"74":{start:{line:101,column:16},end:{line:101,column:91}},"75":{start:{line:103,column:16},end:{line:106,column:17}},"76":{start:{line:104,column:20},end:{line:104,column:102}},"77":{start:{line:105,column:20},end:{line:105,column:55}},"78":{start:{line:109,column:16},end:{line:109,column:86}},"79":{start:{line:110,column:16},end:{line:110,column:85}},"80":{start:{line:113,column:12},end:{line:113,column:59}},"81":{start:{line:114,column:28},end:{line:114,column:110}},"82":{start:{line:115,column:12},end:{line:115,column:59}},"83":{start:{line:117,column:12},end:{line:124,column:13}},"84":{start:{line:118,column:16},end:{line:118,column:62}},"85":{start:{line:119,column:16},end:{line:119,column:47}},"86":{start:{line:122,column:16},end:{line:122,column:68}},"87":{start:{line:123,column:16},end:{line:123,column:47}},"88":{start:{line:125,column:12},end:{line:125,column:119}},"89":{start:{line:126,column:12},end:{line:126,column:29}},"90":{start:{line:129,column:12},end:{line:129,column:75}},"91":{start:{line:130,column:12},end:{line:130,column:28}},"92":{start:{line:131,column:12},end:{line:131,column:19}},"93":{start:{line:135,column:0},end:{line:142,column:61}},"94":{start:{line:143,column:0},end:{line:151,column:57}},"95":{start:{line:152,column:0},end:{line:155,column:23}},"96":{start:{line:156,column:0},end:{line:156,column:48}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:2,column:46},end:{line:2,column:47}},loc:{start:{line:2,column:87},end:{line:7,column:1}},line:2},"1":{name:"(anonymous_1)",decl:{start:{line:8,column:46},end:{line:8,column:47}},loc:{start:{line:8,column:62},end:{line:10,column:1}},line:8},"2":{name:"(anonymous_2)",decl:{start:{line:19,column:4},end:{line:19,column:5}},loc:{start:{line:19,column:18},end:{line:19,column:76}},line:19},"3":{name:"(anonymous_3)",decl:{start:{line:21,column:4},end:{line:21,column:5}},loc:{start:{line:21,column:60},end:{line:40,column:5}},line:21},"4":{name:"(anonymous_4)",decl:{start:{line:42,column:4},end:{line:42,column:5}},loc:{start:{line:42,column:59},end:{line:133,column:5}},line:42},"5":{name:"(anonymous_5)",decl:{start:{line:49,column:39},end:{line:49,column:40}},loc:{start:{line:49,column:52},end:{line:49,column:88}},line:49},"6":{name:"(anonymous_6)",decl:{start:{line:81,column:42},end:{line:81,column:43}},loc:{start:{line:81,column:58},end:{line:89,column:17}},line:81},"7":{name:"(anonymous_7)",decl:{start:{line:82,column:71},end:{line:82,column:72}},loc:{start:{line:82,column:102},end:{line:84,column:21}},line:82},"8":{name:"(anonymous_8)",decl:{start:{line:91,column:58},end:{line:91,column:59}},loc:{start:{line:91,column:79},end:{line:100,column:17}},line:91},"9":{name:"(anonymous_9)",decl:{start:{line:92,column:71},end:{line:92,column:72}},loc:{start:{line:92,column:102},end:{line:94,column:21}},line:92}},branchMap:{"0":{loc:{start:{line:2,column:17},end:{line:7,column:1}},type:"binary-expr",locations:[{start:{line:2,column:18},end:{line:2,column:22}},{start:{line:2,column:26},end:{line:2,column:41}},{start:{line:2,column:46},end:{line:7,column:1}}],line:2},"1":{loc:{start:{line:3,column:34},end:{line:3,column:125}},type:"cond-expr",locations:[{start:{line:3,column:42},end:{line:3,column:48}},{start:{line:3,column:51},end:{line:3,column:125}}],line:3},"2":{loc:{start:{line:3,column:51},end:{line:3,column:125}},type:"cond-expr",locations:[{start:{line:3,column:67},end:{line:3,column:118}},{start:{line:3,column:121},end:{line:3,column:125}}],line:3},"3":{loc:{start:{line:4,column:4},end:{line:5,column:150}},type:"if",locations:[{start:{line:4,column:4},end:{line:5,column:150}},{start:{line:4,column:4},end:{line:5,column:150}}],line:4},"4":{loc:{start:{line:4,column:8},end:{line:4,column:77}},type:"binary-expr",locations:[{start:{line:4,column:8},end:{line:4,column:35}},{start:{line:4,column:39},end:{line:4,column:77}}],line:4},"5":{loc:{start:{line:5,column:58},end:{line:5,column:150}},type:"if",locations:[{start:{line:5,column:58},end:{line:5,column:150}},{start:{line:5,column:58},end:{line:5,column:150}}],line:5},"6":{loc:{start:{line:5,column:85},end:{line:5,column:149}},type:"binary-expr",locations:[{start:{line:5,column:86},end:{line:5,column:143}},{start:{line:5,column:148},end:{line:5,column:149}}],line:5},"7":{loc:{start:{line:5,column:86},end:{line:5,column:143}},type:"cond-expr",locations:[{start:{line:5,column:94},end:{line:5,column:98}},{start:{line:5,column:101},end:{line:5,column:143}}],line:5},"8":{loc:{start:{line:5,column:101},end:{line:5,column:143}},type:"cond-expr",locations:[{start:{line:5,column:109},end:{line:5,column:126}},{start:{line:5,column:129},end:{line:5,column:143}}],line:5},"9":{loc:{start:{line:6,column:11},end:{line:6,column:62}},type:"binary-expr",locations:[{start:{line:6,column:11},end:{line:6,column:16}},{start:{line:6,column:20},end:{line:6,column:21}},{start:{line:6,column:25},end:{line:6,column:62}}],line:6},"10":{loc:{start:{line:8,column:17},end:{line:10,column:1}},type:"binary-expr",locations:[{start:{line:8,column:18},end:{line:8,column:22}},{start:{line:8,column:26},end:{line:8,column:41}},{start:{line:8,column:46},end:{line:10,column:1}}],line:8},"11":{loc:{start:{line:9,column:4},end:{line:9,column:109}},type:"if",locations:[{start:{line:9,column:4},end:{line:9,column:109}},{start:{line:9,column:4},end:{line:9,column:109}}],line:9},"12":{loc:{start:{line:9,column:8},end:{line:9,column:77}},type:"binary-expr",locations:[{start:{line:9,column:8},end:{line:9,column:35}},{start:{line:9,column:39},end:{line:9,column:77}}],line:9},"13":{loc:{start:{line:24,column:12},end:{line:26,column:13}},type:"if",locations:[{start:{line:24,column:12},end:{line:26,column:13}},{start:{line:24,column:12},end:{line:26,column:13}}],line:24},"14":{loc:{start:{line:46,column:12},end:{line:48,column:13}},type:"if",locations:[{start:{line:46,column:12},end:{line:48,column:13}},{start:{line:46,column:12},end:{line:48,column:13}}],line:46},"15":{loc:{start:{line:49,column:12},end:{line:51,column:13}},type:"if",locations:[{start:{line:49,column:12},end:{line:51,column:13}},{start:{line:49,column:12},end:{line:51,column:13}}],line:49},"16":{loc:{start:{line:56,column:12},end:{line:61,column:13}},type:"if",locations:[{start:{line:56,column:12},end:{line:61,column:13}},{start:{line:56,column:12},end:{line:61,column:13}}],line:56},"17":{loc:{start:{line:65,column:12},end:{line:67,column:13}},type:"if",locations:[{start:{line:65,column:12},end:{line:67,column:13}},{start:{line:65,column:12},end:{line:67,column:13}}],line:65},"18":{loc:{start:{line:72,column:12},end:{line:74,column:13}},type:"if",locations:[{start:{line:72,column:12},end:{line:74,column:13}},{start:{line:72,column:12},end:{line:74,column:13}}],line:72},"19":{loc:{start:{line:77,column:34},end:{line:77,column:118}},type:"cond-expr",locations:[{start:{line:77,column:96},end:{line:77,column:102}},{start:{line:77,column:105},end:{line:77,column:118}}],line:77},"20":{loc:{start:{line:77,column:35},end:{line:77,column:92}},type:"binary-expr",locations:[{start:{line:77,column:35},end:{line:77,column:63}},{start:{line:77,column:67},end:{line:77,column:92}}],line:77},"21":{loc:{start:{line:78,column:12},end:{line:111,column:13}},type:"if",locations:[{start:{line:78,column:12},end:{line:111,column:13}},{start:{line:78,column:12},end:{line:111,column:13}}],line:78},"22":{loc:{start:{line:78,column:16},end:{line:78,column:73}},type:"binary-expr",locations:[{start:{line:78,column:16},end:{line:78,column:44}},{start:{line:78,column:48},end:{line:78,column:73}}],line:78},"23":{loc:{start:{line:83,column:31},end:{line:83,column:252}},type:"binary-expr",locations:[{start:{line:83,column:31},end:{line:83,column:52}},{start:{line:83,column:56},end:{line:83,column:77}},{start:{line:83,column:81},end:{line:83,column:112}},{start:{line:83,column:116},end:{line:83,column:145}},{start:{line:83,column:149},end:{line:83,column:182}},{start:{line:83,column:186},end:{line:83,column:219}},{start:{line:83,column:223},end:{line:83,column:252}}],line:83},"24":{loc:{start:{line:85,column:20},end:{line:88,column:21}},type:"if",locations:[{start:{line:85,column:20},end:{line:88,column:21}},{start:{line:85,column:20},end:{line:88,column:21}}],line:85},"25":{loc:{start:{line:93,column:31},end:{line:93,column:252}},type:"binary-expr",locations:[{start:{line:93,column:31},end:{line:93,column:52}},{start:{line:93,column:56},end:{line:93,column:77}},{start:{line:93,column:81},end:{line:93,column:112}},{start:{line:93,column:116},end:{line:93,column:145}},{start:{line:93,column:149},end:{line:93,column:182}},{start:{line:93,column:186},end:{line:93,column:219}},{start:{line:93,column:223},end:{line:93,column:252}}],line:93},"26":{loc:{start:{line:95,column:20},end:{line:98,column:21}},type:"if",locations:[{start:{line:95,column:20},end:{line:98,column:21}},{start:{line:95,column:20},end:{line:98,column:21}}],line:95},"27":{loc:{start:{line:103,column:16},end:{line:106,column:17}},type:"if",locations:[{start:{line:103,column:16},end:{line:106,column:17}},{start:{line:103,column:16},end:{line:106,column:17}}],line:103},"28":{loc:{start:{line:117,column:12},end:{line:124,column:13}},type:"if",locations:[{start:{line:117,column:12},end:{line:124,column:13}},{start:{line:117,column:12},end:{line:124,column:13}}],line:117}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0,0,0,0,0],"24":[0,0],"25":[0,0,0,0,0,0,0],"26":[0,0],"27":[0,0],"28":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"9d101309caf573fa98ed81e684e41a2f84f4c846"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();var __decorate=(cov_1sfl8dbvcs.s[0]++,(cov_1sfl8dbvcs.b[0][0]++,this)&&(cov_1sfl8dbvcs.b[0][1]++,this.__decorate)||(cov_1sfl8dbvcs.b[0][2]++,function(decorators,target,key,desc){cov_1sfl8dbvcs.f[0]++;var c=(cov_1sfl8dbvcs.s[1]++,arguments.length),r=(cov_1sfl8dbvcs.s[2]++,c<3?(cov_1sfl8dbvcs.b[1][0]++,target):(cov_1sfl8dbvcs.b[1][1]++,desc===null?(cov_1sfl8dbvcs.b[2][0]++,desc=Object.getOwnPropertyDescriptor(target,key)):(cov_1sfl8dbvcs.b[2][1]++,desc))),d;cov_1sfl8dbvcs.s[3]++;if((cov_1sfl8dbvcs.b[4][0]++,typeof Reflect==="object")&&(cov_1sfl8dbvcs.b[4][1]++,typeof Reflect.decorate==="function")){cov_1sfl8dbvcs.b[3][0]++;cov_1sfl8dbvcs.s[4]++;r=Reflect.decorate(decorators,target,key,desc);}else{cov_1sfl8dbvcs.b[3][1]++;cov_1sfl8dbvcs.s[5]++;for(var i=(cov_1sfl8dbvcs.s[6]++,decorators.length-1);i>=0;i--){cov_1sfl8dbvcs.s[7]++;if(d=decorators[i]){cov_1sfl8dbvcs.b[5][0]++;cov_1sfl8dbvcs.s[8]++;r=(cov_1sfl8dbvcs.b[6][0]++,c<3?(cov_1sfl8dbvcs.b[7][0]++,d(r)):(cov_1sfl8dbvcs.b[7][1]++,c>3?(cov_1sfl8dbvcs.b[8][0]++,d(target,key,r)):(cov_1sfl8dbvcs.b[8][1]++,d(target,key))))||(cov_1sfl8dbvcs.b[6][1]++,r);}else{cov_1sfl8dbvcs.b[5][1]++;}}}cov_1sfl8dbvcs.s[9]++;return(cov_1sfl8dbvcs.b[9][0]++,c>3)&&(cov_1sfl8dbvcs.b[9][1]++,r)&&(cov_1sfl8dbvcs.b[9][2]++,Object.defineProperty(target,key,r)),r;}));var __metadata=(cov_1sfl8dbvcs.s[10]++,(cov_1sfl8dbvcs.b[10][0]++,this)&&(cov_1sfl8dbvcs.b[10][1]++,this.__metadata)||(cov_1sfl8dbvcs.b[10][2]++,function(k,v){cov_1sfl8dbvcs.f[1]++;cov_1sfl8dbvcs.s[11]++;if((cov_1sfl8dbvcs.b[12][0]++,typeof Reflect==="object")&&(cov_1sfl8dbvcs.b[12][1]++,typeof Reflect.metadata==="function")){cov_1sfl8dbvcs.b[11][0]++;cov_1sfl8dbvcs.s[12]++;return Reflect.metadata(k,v);}else{cov_1sfl8dbvcs.b[11][1]++;}}));cov_1sfl8dbvcs.s[13]++;Object.defineProperty(exports,"__esModule",{value:true});const fabric_contract_api_1=(cov_1sfl8dbvcs.s[14]++,require("fabric-contract-api"));const models_1=(cov_1sfl8dbvcs.s[15]++,require("../models"));const repositories_1=(cov_1sfl8dbvcs.s[16]++,require("../repositories"));const processing_engine_1=(cov_1sfl8dbvcs.s[17]++,require("../processing-engine"));const Logger=(cov_1sfl8dbvcs.s[18]++,require('../logger'));const logger=(cov_1sfl8dbvcs.s[19]++,Logger.getLogger('./contracts/ifc-shipped.contract.ts'));cov_1sfl8dbvcs.s[20]++;let IFCShippedContract=class IFCShippedContract extends fabric_contract_api_1.Contract{constructor(){cov_1sfl8dbvcs.f[2]++;cov_1sfl8dbvcs.s[21]++;super("com.homedepot.procurement.IFCShippedContract");}// Used to bulk merge several records of new VendorShipped data with existing VendorShipped data
async bulkSaveIFCShipped(ctx,newListOfIFCShippedLists){cov_1sfl8dbvcs.f[3]++;cov_1sfl8dbvcs.s[22]++;try{cov_1sfl8dbvcs.s[23]++;// Sanity-checks: list.length > 0
if(newListOfIFCShippedLists.length===0){cov_1sfl8dbvcs.b[13][0]++;cov_1sfl8dbvcs.s[24]++;throw new Error(`bulkSaveIFCShipped was called with 0 IFCShippeds`);}else{cov_1sfl8dbvcs.b[13][1]++;}// Add each set of PO items to the blockchain, one PONumber at a time
let aps=(cov_1sfl8dbvcs.s[25]++,[]);cov_1sfl8dbvcs.s[26]++;for(let currentItemsList of newListOfIFCShippedLists){let currentSavedAP=(cov_1sfl8dbvcs.s[27]++,await this.saveIFCShipped(ctx,currentItemsList.PONumber,currentItemsList.Items));cov_1sfl8dbvcs.s[28]++;aps.push(currentSavedAP);}cov_1sfl8dbvcs.s[29]++;return aps;}catch(e){cov_1sfl8dbvcs.s[30]++;logger.error(`bulkSaveIFCShipped failed`);cov_1sfl8dbvcs.s[31]++;logger.error(e);cov_1sfl8dbvcs.s[32]++;return;}}// Used to merge new IFCShipped data with existing IFCShipped data
async saveIFCShipped(ctx,poNumber,newIFCShippedList){cov_1sfl8dbvcs.f[4]++;cov_1sfl8dbvcs.s[33]++;try{cov_1sfl8dbvcs.s[34]++;// Sanity-checks: ishlist.length > 0, all items in ishlist have PONumber=poNumber
poNumber=poNumber.trim();cov_1sfl8dbvcs.s[35]++;if(newIFCShippedList.length===0){cov_1sfl8dbvcs.b[14][0]++;cov_1sfl8dbvcs.s[36]++;throw new Error(`saveIFCShipped was called with 0 IFCShipped items, for PONumber '${poNumber}'`);}else{cov_1sfl8dbvcs.b[14][1]++;}cov_1sfl8dbvcs.s[37]++;if(newIFCShippedList.some((v,i,l)=>{cov_1sfl8dbvcs.f[5]++;cov_1sfl8dbvcs.s[38]++;return v.PONumber!=poNumber;})){cov_1sfl8dbvcs.b[15][0]++;cov_1sfl8dbvcs.s[39]++;throw new Error(`saveIFCShipped was called with some IFCShipped items that do not have PONUmber '${poNumber}`);}else{cov_1sfl8dbvcs.b[15][1]++;}let apRepo=(cov_1sfl8dbvcs.s[40]++,new repositories_1.AssetProcurementRepository(ctx));// Retrieve or create the AssetProcurement record
let ap=(cov_1sfl8dbvcs.s[41]++,new models_1.AssetProcurement({PONumber:poNumber}));let apIsNew=(cov_1sfl8dbvcs.s[42]++,true);cov_1sfl8dbvcs.s[43]++;if((await apRepo.exists(poNumber))==true){cov_1sfl8dbvcs.b[16][0]++;cov_1sfl8dbvcs.s[44]++;logger.debug(`PONumber ${poNumber} exists`);cov_1sfl8dbvcs.s[45]++;ap=await apRepo.get(poNumber);cov_1sfl8dbvcs.s[46]++;apIsNew=false;cov_1sfl8dbvcs.s[47]++;logger.debug('Retreived AP from storage');}else{cov_1sfl8dbvcs.b[16][1]++;}// Get the list of UnitOfMeasure data
cov_1sfl8dbvcs.s[48]++;logger.debug('Retrieving UOM data from storage');let uomList=(cov_1sfl8dbvcs.s[49]++,await new repositories_1.UnitOfMeasureListRepository(ctx).get());cov_1sfl8dbvcs.s[50]++;if(uomList===undefined){cov_1sfl8dbvcs.b[17][0]++;cov_1sfl8dbvcs.s[51]++;uomList=new models_1.UnitOfMeasureList({Items:[]});}else{cov_1sfl8dbvcs.b[17][1]++;}cov_1sfl8dbvcs.s[52]++;logger.debug(uomList.Items.length);// Retrieve the current ADR Rule data
cov_1sfl8dbvcs.s[53]++;logger.debug('Retrieving ADR Rules from storage');let adrRuleList=(cov_1sfl8dbvcs.s[54]++,await new repositories_1.ADRRuleListRepository(ctx).get());cov_1sfl8dbvcs.s[55]++;if(adrRuleList===undefined){cov_1sfl8dbvcs.b[18][0]++;cov_1sfl8dbvcs.s[56]++;adrRuleList=new models_1.ADRRuleList({Items:[]});}else{cov_1sfl8dbvcs.b[18][1]++;}cov_1sfl8dbvcs.s[57]++;logger.debug(adrRuleList.Items.length);// Merge the existing IFCShipped data with the new data
cov_1sfl8dbvcs.s[58]++;logger.debug('We '+((cov_1sfl8dbvcs.b[20][0]++,ap.IFCShippeds!==undefined)&&(cov_1sfl8dbvcs.b[20][1]++,ap.IFCShippeds.length>0)?(cov_1sfl8dbvcs.b[19][0]++,'have'):(cov_1sfl8dbvcs.b[19][1]++,'do not have'))+' ISH data for the AP');cov_1sfl8dbvcs.s[59]++;if((cov_1sfl8dbvcs.b[22][0]++,ap.IFCShippeds!==undefined)&&(cov_1sfl8dbvcs.b[22][1]++,ap.IFCShippeds.length>0)){cov_1sfl8dbvcs.b[21][0]++;cov_1sfl8dbvcs.s[60]++;// Merge any records that match on key identifier fields
logger.debug(`Starting with ${newIFCShippedList.length} new IFCShippeds`);cov_1sfl8dbvcs.s[61]++;newIFCShippedList.forEach((vc,ic,lc)=>{cov_1sfl8dbvcs.f[6]++;let existingRecordIndex=(cov_1sfl8dbvcs.s[62]++,ap.IFCShippeds.findIndex((innerVC,innerIC,innerLC)=>{cov_1sfl8dbvcs.f[7]++;cov_1sfl8dbvcs.s[63]++;return(cov_1sfl8dbvcs.b[23][0]++,vc.RDC==innerVC.RDC)&&(cov_1sfl8dbvcs.b[23][1]++,vc.SKU==innerVC.SKU)&&(cov_1sfl8dbvcs.b[23][2]++,vc.PONumber==innerVC.PONumber)&&(cov_1sfl8dbvcs.b[23][3]++,vc.TCASNID==innerVC.TCASNID)&&(cov_1sfl8dbvcs.b[23][4]++,vc.PRONumber==innerVC.PRONumber)&&(cov_1sfl8dbvcs.b[23][5]++,vc.BOLNumber==innerVC.BOLNumber)&&(cov_1sfl8dbvcs.b[23][6]++,vc.Carrier==innerVC.Carrier);}));cov_1sfl8dbvcs.s[64]++;if(existingRecordIndex>-1){cov_1sfl8dbvcs.b[24][0]++;cov_1sfl8dbvcs.s[65]++;logger.debug('Found a new ISH that matched an existing one');cov_1sfl8dbvcs.s[66]++;ap.IFCShippeds[existingRecordIndex]=vc;}else{cov_1sfl8dbvcs.b[24][1]++;}});// Deterimine all records that are new and do not match any existing records
let uniqueISHs=(cov_1sfl8dbvcs.s[67]++,newIFCShippedList.reduce((pac,vc,ic,lc)=>{cov_1sfl8dbvcs.f[8]++;let existingRecordIndex=(cov_1sfl8dbvcs.s[68]++,ap.IFCShippeds.findIndex((innerVC,innerIC,innerLC)=>{cov_1sfl8dbvcs.f[9]++;cov_1sfl8dbvcs.s[69]++;return(cov_1sfl8dbvcs.b[25][0]++,vc.RDC==innerVC.RDC)&&(cov_1sfl8dbvcs.b[25][1]++,vc.SKU==innerVC.SKU)&&(cov_1sfl8dbvcs.b[25][2]++,vc.PONumber==innerVC.PONumber)&&(cov_1sfl8dbvcs.b[25][3]++,vc.TCASNID==innerVC.TCASNID)&&(cov_1sfl8dbvcs.b[25][4]++,vc.PRONumber==innerVC.PRONumber)&&(cov_1sfl8dbvcs.b[25][5]++,vc.BOLNumber==innerVC.BOLNumber)&&(cov_1sfl8dbvcs.b[25][6]++,vc.Carrier==innerVC.Carrier);}));cov_1sfl8dbvcs.s[70]++;if(existingRecordIndex==-1){cov_1sfl8dbvcs.b[26][0]++;cov_1sfl8dbvcs.s[71]++;logger.debug('Found a new ISH that does not match the existing ones');cov_1sfl8dbvcs.s[72]++;pac.push(vc);}else{cov_1sfl8dbvcs.b[26][1]++;}cov_1sfl8dbvcs.s[73]++;return pac;},[]));cov_1sfl8dbvcs.s[74]++;logger.debug(`Ended up with ${uniqueISHs.length} totally new IFCShippeds`);// If we found some new records to add, Append new records to the existing ones
cov_1sfl8dbvcs.s[75]++;if(uniqueISHs.length>0){cov_1sfl8dbvcs.b[27][0]++;cov_1sfl8dbvcs.s[76]++;logger.debug('Adding the final list of unique ISHs to the existing list of ISHs');cov_1sfl8dbvcs.s[77]++;ap.IFCShippeds.push(...uniqueISHs);}else{cov_1sfl8dbvcs.b[27][1]++;}}else{cov_1sfl8dbvcs.b[21][1]++;cov_1sfl8dbvcs.s[78]++;logger.debug('Adding all new ISHs since there are no existing ISHs.');cov_1sfl8dbvcs.s[79]++;ap.setStageDetails(models_1.StageType.IFCShipped,newIFCShippedList);}// Run this through the processing engine (FSM)
cov_1sfl8dbvcs.s[80]++;logger.debug('Starting the processing engine');let updatedAP=(cov_1sfl8dbvcs.s[81]++,processing_engine_1.ProcessingEngine.startProcessing(ap,{uomList,adrRuleList}));cov_1sfl8dbvcs.s[82]++;logger.debug('Finished the processing engine');// Save the AssetProcurement record
cov_1sfl8dbvcs.s[83]++;if(apIsNew){cov_1sfl8dbvcs.b[28][0]++;cov_1sfl8dbvcs.s[84]++;logger.debug('Attempting to create a new AP');cov_1sfl8dbvcs.s[85]++;await apRepo.create(updatedAP);}else{cov_1sfl8dbvcs.b[28][1]++;cov_1sfl8dbvcs.s[86]++;logger.debug('Attempting to update an existing AP');cov_1sfl8dbvcs.s[87]++;await apRepo.update(updatedAP);}cov_1sfl8dbvcs.s[88]++;logger.debug(`saveIFCShipped saved ${newIFCShippedList.length} IFCShipped items for PONumber ${poNumber}`);cov_1sfl8dbvcs.s[89]++;return updatedAP;}catch(e){cov_1sfl8dbvcs.s[90]++;logger.error(`saveIFCShipped failed for PONumber ${poNumber}`);cov_1sfl8dbvcs.s[91]++;logger.error(e);cov_1sfl8dbvcs.s[92]++;return;}}};cov_1sfl8dbvcs.s[93]++;__decorate([fabric_contract_api_1.Transaction(),fabric_contract_api_1.Param("newListOfIFCShippedLists","IFCShippedList[]"),fabric_contract_api_1.Returns('AssetProcurement[]'),__metadata("design:type",Function),__metadata("design:paramtypes",[fabric_contract_api_1.Context,Array]),__metadata("design:returntype",Promise)],IFCShippedContract.prototype,"bulkSaveIFCShipped",null);cov_1sfl8dbvcs.s[94]++;__decorate([fabric_contract_api_1.Transaction(),fabric_contract_api_1.Param("poNumber","string"),fabric_contract_api_1.Param("newIFCShippedList","IFCShipped[]"),fabric_contract_api_1.Returns('AssetProcurement'),__metadata("design:type",Function),__metadata("design:paramtypes",[fabric_contract_api_1.Context,String,Array]),__metadata("design:returntype",Promise)],IFCShippedContract.prototype,"saveIFCShipped",null);cov_1sfl8dbvcs.s[95]++;IFCShippedContract=__decorate([fabric_contract_api_1.Info({title:'IFCShippedContract',description:'Contract for managing the list of IFCShippeds, and their related discrepancies'}),__metadata("design:paramtypes",[])],IFCShippedContract);cov_1sfl8dbvcs.s[96]++;exports.IFCShippedContract=IFCShippedContract;//# sourceMappingURL=data:application/json;charset=utf-8;base64,