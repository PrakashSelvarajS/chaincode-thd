/*
# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
*/'use strict';var cov_x4vtdg9e0=function(){var path="C:\\Users\\PRAKASHSELVARAJ\\Blockchain\\Home Depot\\Development\\chaincode_0901\\src\\logger.ts";var hash="13d0ad81ff2f16dd62f9db81104b309ce1e1f841";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\PRAKASHSELVARAJ\\Blockchain\\Home Depot\\Development\\chaincode_0901\\src\\logger.ts",statementMap:{"0":{start:{line:7,column:0},end:{line:7,column:62}},"1":{start:{line:8,column:16},end:{line:8,column:34}},"2":{start:{line:9,column:16},end:{line:9,column:27}},"3":{start:{line:10,column:14},end:{line:10,column:33}},"4":{start:{line:11,column:13},end:{line:11,column:28}},"5":{start:{line:12,column:22},end:{line:12,column:52}},"6":{start:{line:14,column:16},end:{line:14,column:65}},"7":{start:{line:17,column:18},end:{line:37,column:3}},"8":{start:{line:17,column:26},end:{line:37,column:3}},"9":{start:{line:18,column:42},end:{line:18,column:46}},"10":{start:{line:19,column:16},end:{line:19,column:79}},"11":{start:{line:20,column:14},end:{line:20,column:16}},"12":{start:{line:21,column:4},end:{line:35,column:5}},"13":{start:{line:22,column:8},end:{line:34,column:11}},"14":{start:{line:23,column:12},end:{line:33,column:13}},"15":{start:{line:24,column:16},end:{line:29,column:17}},"16":{start:{line:25,column:20},end:{line:25,column:41}},"17":{start:{line:28,column:20},end:{line:28,column:43}},"18":{start:{line:32,column:16},end:{line:32,column:40}},"19":{start:{line:36,column:4},end:{line:36,column:61}},"20":{start:{line:40,column:21},end:{line:47,column:1}},"21":{start:{line:41,column:4},end:{line:45,column:5}},"22":{start:{line:42,column:8},end:{line:44,column:11}},"23":{start:{line:46,column:4},end:{line:46,column:21}},"24":{start:{line:51,column:19},end:{line:58,column:6}},"25":{start:{line:59,column:4},end:{line:59,column:18}},"26":{start:{line:62,column:21},end:{line:83,column:1}},"27":{start:{line:63,column:19},end:{line:63,column:25}},"28":{start:{line:64,column:4},end:{line:81,column:5}},"29":{start:{line:65,column:8},end:{line:80,column:9}},"30":{start:{line:67,column:16},end:{line:67,column:35}},"31":{start:{line:68,column:16},end:{line:68,column:22}},"32":{start:{line:70,column:16},end:{line:70,column:35}},"33":{start:{line:71,column:16},end:{line:71,column:22}},"34":{start:{line:73,column:16},end:{line:73,column:34}},"35":{start:{line:74,column:16},end:{line:74,column:22}},"36":{start:{line:76,column:16},end:{line:76,column:35}},"37":{start:{line:77,column:16},end:{line:77,column:22}},"38":{start:{line:79,column:16},end:{line:79,column:34}},"39":{start:{line:82,column:4},end:{line:82,column:20}},"40":{start:{line:88,column:21},end:{line:88,column:75}},"41":{start:{line:90,column:4},end:{line:97,column:5}},"42":{start:{line:91,column:8},end:{line:91,column:31}},"43":{start:{line:92,column:8},end:{line:92,column:32}},"44":{start:{line:95,column:8},end:{line:95,column:46}},"45":{start:{line:96,column:8},end:{line:96,column:31}},"46":{start:{line:98,column:4},end:{line:98,column:18}},"47":{start:{line:100,column:0},end:{line:100,column:30}},"48":{start:{line:105,column:21},end:{line:105,column:40}},"49":{start:{line:106,column:4},end:{line:106,column:56}},"50":{start:{line:107,column:4},end:{line:109,column:7}},"51":{start:{line:108,column:8},end:{line:108,column:39}},"52":{start:{line:111,column:0},end:{line:111,column:28}},"53":{start:{line:118,column:4},end:{line:133,column:5}},"54":{start:{line:119,column:25},end:{line:119,column:79}},"55":{start:{line:120,column:8},end:{line:129,column:11}},"56":{start:{line:130,column:8},end:{line:132,column:11}},"57":{start:{line:131,column:12},end:{line:131,column:100}},"58":{start:{line:135,column:0},end:{line:135,column:12}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:17,column:18},end:{line:17,column:19}},loc:{start:{line:17,column:26},end:{line:37,column:3}},line:17},"1":{name:"(anonymous_1)",decl:{start:{line:17,column:239},end:{line:17,column:240}},loc:{start:{line:17,column:249},end:{line:37,column:1}},line:17},"2":{name:"(anonymous_2)",decl:{start:{line:22,column:30},end:{line:22,column:31}},loc:{start:{line:22,column:35},end:{line:34,column:9}},line:22},"3":{name:"(anonymous_3)",decl:{start:{line:40,column:21},end:{line:40,column:22}},loc:{start:{line:40,column:27},end:{line:47,column:1}},line:40},"4":{name:"createLogger",decl:{start:{line:50,column:9},end:{line:50,column:21}},loc:{start:{line:50,column:38},end:{line:60,column:1}},line:50},"5":{name:"(anonymous_5)",decl:{start:{line:62,column:21},end:{line:62,column:22}},loc:{start:{line:62,column:32},end:{line:83,column:1}},line:62},"6":{name:"getLogger",decl:{start:{line:85,column:9},end:{line:85,column:18}},loc:{start:{line:85,column:30},end:{line:99,column:1}},line:85},"7":{name:"setLevel",decl:{start:{line:103,column:9},end:{line:103,column:17}},loc:{start:{line:103,column:25},end:{line:110,column:1}},line:103},"8":{name:"(anonymous_8)",decl:{start:{line:107,column:33},end:{line:107,column:34}},loc:{start:{line:107,column:43},end:{line:109,column:5}},line:107},"9":{name:"firstTime",decl:{start:{line:117,column:9},end:{line:117,column:18}},loc:{start:{line:117,column:21},end:{line:134,column:1}},line:117},"10":{name:"(anonymous_10)",decl:{start:{line:130,column:41},end:{line:130,column:42}},loc:{start:{line:130,column:56},end:{line:132,column:9}},line:130}},branchMap:{"0":{loc:{start:{line:21,column:4},end:{line:35,column:5}},type:"if",locations:[{start:{line:21,column:4},end:{line:35,column:5}},{start:{line:21,column:4},end:{line:35,column:5}}],line:21},"1":{loc:{start:{line:23,column:12},end:{line:33,column:13}},type:"if",locations:[{start:{line:23,column:12},end:{line:33,column:13}},{start:{line:23,column:12},end:{line:33,column:13}}],line:23},"2":{loc:{start:{line:23,column:16},end:{line:23,column:28}},type:"binary-expr",locations:[{start:{line:23,column:16},end:{line:23,column:17}},{start:{line:23,column:21},end:{line:23,column:28}}],line:23},"3":{loc:{start:{line:24,column:16},end:{line:29,column:17}},type:"if",locations:[{start:{line:24,column:16},end:{line:29,column:17}},{start:{line:24,column:16},end:{line:29,column:17}}],line:24},"4":{loc:{start:{line:41,column:4},end:{line:45,column:5}},type:"if",locations:[{start:{line:41,column:4},end:{line:45,column:5}},{start:{line:41,column:4},end:{line:45,column:5}}],line:41},"5":{loc:{start:{line:64,column:4},end:{line:81,column:5}},type:"if",locations:[{start:{line:64,column:4},end:{line:81,column:5}},{start:{line:64,column:4},end:{line:81,column:5}}],line:64},"6":{loc:{start:{line:65,column:8},end:{line:80,column:9}},type:"switch",locations:[{start:{line:66,column:12},end:{line:68,column:22}},{start:{line:69,column:12},end:{line:71,column:22}},{start:{line:72,column:12},end:{line:74,column:22}},{start:{line:75,column:12},end:{line:77,column:22}},{start:{line:78,column:12},end:{line:79,column:34}}],line:65},"7":{loc:{start:{line:85,column:19},end:{line:85,column:28}},type:"default-arg",locations:[{start:{line:85,column:26},end:{line:85,column:28}}],line:85},"8":{loc:{start:{line:90,column:4},end:{line:97,column:5}},type:"if",locations:[{start:{line:90,column:4},end:{line:97,column:5}},{start:{line:90,column:4},end:{line:97,column:5}}],line:90},"9":{loc:{start:{line:118,column:4},end:{line:133,column:5}},type:"if",locations:[{start:{line:118,column:4},end:{line:133,column:5}},{start:{line:118,column:4},end:{line:133,column:5}}],line:118}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0],"7":[0],"8":[0,0],"9":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"13d0ad81ff2f16dd62f9db81104b309ce1e1f841"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_x4vtdg9e0.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const winston=(cov_x4vtdg9e0.s[1]++,require('winston'));const loggers=(cov_x4vtdg9e0.s[2]++,{_:null});const SPLAT=(cov_x4vtdg9e0.s[3]++,Symbol.for('splat'));const util=(cov_x4vtdg9e0.s[4]++,require('util'));const safeStringify=(cov_x4vtdg9e0.s[5]++,require('fast-safe-stringify'));// looks odd, but this is the most efficient way of padding strings in js
const padding=(cov_x4vtdg9e0.s[6]++,'                                               ');// define the formatter for Winston
// this is aimed at being a singleton
cov_x4vtdg9e0.s[7]++;const formatter=name=>{cov_x4vtdg9e0.f[0]++;cov_x4vtdg9e0.s[8]++;return winston.format.combine(winston.format.timestamp(),winston.format.metadata({fillExcept:['message','level','timestamp','label']}),winston.format.colorize(),winston.format.padLevels(),winston.format.printf(info=>{cov_x4vtdg9e0.f[1]++;const{timestamp,level,message}=(cov_x4vtdg9e0.s[9]++,info);const str=(cov_x4vtdg9e0.s[10]++,(`[disputesCC:${name}]`+padding).substring(0,padding.length));let out=(cov_x4vtdg9e0.s[11]++,'');cov_x4vtdg9e0.s[12]++;if(info[SPLAT]){cov_x4vtdg9e0.b[0][0]++;cov_x4vtdg9e0.s[13]++;out=info[SPLAT].map(e=>{cov_x4vtdg9e0.f[2]++;cov_x4vtdg9e0.s[14]++;if((cov_x4vtdg9e0.b[2][0]++,e)&&(cov_x4vtdg9e0.b[2][1]++,e.error)){cov_x4vtdg9e0.b[1][0]++;cov_x4vtdg9e0.s[15]++;if(e.error.stack){cov_x4vtdg9e0.b[3][0]++;cov_x4vtdg9e0.s[16]++;return e.error.stack;}else{cov_x4vtdg9e0.b[3][1]++;cov_x4vtdg9e0.s[17]++;return e.error.message;}}else{cov_x4vtdg9e0.b[1][1]++;cov_x4vtdg9e0.s[18]++;return safeStringify(e);}});}else{cov_x4vtdg9e0.b[0][1]++;}cov_x4vtdg9e0.s[19]++;return`${timestamp} ${level} ${str} ${message} ${out} `;}));};// a console based transport, again a singleton
let transport;cov_x4vtdg9e0.s[20]++;const getTransport=()=>{cov_x4vtdg9e0.f[3]++;cov_x4vtdg9e0.s[21]++;if(!transport){cov_x4vtdg9e0.b[4][0]++;cov_x4vtdg9e0.s[22]++;transport=new winston.transports.Console({handleExceptions:false});}else{cov_x4vtdg9e0.b[4][1]++;}cov_x4vtdg9e0.s[23]++;return transport;};// create a logger
// there is no hierachy or split of loggers; one for future versions
function createLogger(loglevel,name){cov_x4vtdg9e0.f[4]++;const logger=(cov_x4vtdg9e0.s[24]++,new winston.createLogger({level:loglevel,format:formatter(name),transports:[getTransport()],exitOnError:false}));cov_x4vtdg9e0.s[25]++;return logger;}// map the Hyperledger Fabric standard strings to the matching Winston ones
cov_x4vtdg9e0.s[26]++;const levelMapping=level=>{cov_x4vtdg9e0.f[5]++;let loglevel=(cov_x4vtdg9e0.s[27]++,'info');cov_x4vtdg9e0.s[28]++;if(typeof level==='string'){cov_x4vtdg9e0.b[5][0]++;cov_x4vtdg9e0.s[29]++;switch(level.toUpperCase()){case'CRITICAL':cov_x4vtdg9e0.b[6][0]++;cov_x4vtdg9e0.s[30]++;loglevel='fatal';cov_x4vtdg9e0.s[31]++;break;case'ERROR':cov_x4vtdg9e0.b[6][1]++;cov_x4vtdg9e0.s[32]++;loglevel='error';cov_x4vtdg9e0.s[33]++;break;case'WARNING':cov_x4vtdg9e0.b[6][2]++;cov_x4vtdg9e0.s[34]++;loglevel='warn';cov_x4vtdg9e0.s[35]++;break;case'DEBUG':cov_x4vtdg9e0.b[6][3]++;cov_x4vtdg9e0.s[36]++;loglevel='debug';cov_x4vtdg9e0.s[37]++;break;case'INFO':cov_x4vtdg9e0.b[6][4]++;cov_x4vtdg9e0.s[38]++;loglevel='info';}}else{cov_x4vtdg9e0.b[5][1]++;}cov_x4vtdg9e0.s[39]++;return loglevel;};// Exported function to get the logger for a given name
function getLogger(name=(cov_x4vtdg9e0.b[7][0]++,'')){cov_x4vtdg9e0.f[6]++;// set the logging level based on the environment variable
// configured by the peer
const loglevel=(cov_x4vtdg9e0.s[40]++,levelMapping(process.env.CORE_CHAINCODE_LOGGING_LEVEL));let logger;cov_x4vtdg9e0.s[41]++;if(loggers[name]){cov_x4vtdg9e0.b[8][0]++;cov_x4vtdg9e0.s[42]++;logger=loggers[name];cov_x4vtdg9e0.s[43]++;logger.level=loglevel;}else{cov_x4vtdg9e0.b[8][1]++;cov_x4vtdg9e0.s[44]++;logger=createLogger(loglevel,name);cov_x4vtdg9e0.s[45]++;loggers[name]=logger;}cov_x4vtdg9e0.s[46]++;return logger;}cov_x4vtdg9e0.s[47]++;exports.getLogger=getLogger;;// Specifically set the logging level
function setLevel(level){cov_x4vtdg9e0.f[7]++;// set the level of all the loggers currently active
const loglevel=(cov_x4vtdg9e0.s[48]++,levelMapping(level));cov_x4vtdg9e0.s[49]++;process.env.CORE_CHAINCODE_LOGGING_LEVEL=loglevel;cov_x4vtdg9e0.s[50]++;Object.keys(loggers).forEach(name=>{cov_x4vtdg9e0.f[8]++;cov_x4vtdg9e0.s[51]++;loggers[name].level=loglevel;});}cov_x4vtdg9e0.s[52]++;exports.setLevel=setLevel;;// This function is intended for once only use; it will setup a logger
// that will response to the unhanldedExceptions and the unhandledRejections
// Having too many transports that have handleExceptions = true results in
// node warnings about memory leaks.
function firstTime(){cov_x4vtdg9e0.f[9]++;cov_x4vtdg9e0.s[53]++;if(loggers._===null){cov_x4vtdg9e0.b[9][0]++;const loglevel=(cov_x4vtdg9e0.s[54]++,levelMapping(process.env.CORE_CHAINCODE_LOGGING_LEVEL));cov_x4vtdg9e0.s[55]++;loggers._=new winston.createLogger({level:loglevel,format:formatter('_'),transports:[new winston.transports.Console({handleExceptions:true})],exitOnError:false});cov_x4vtdg9e0.s[56]++;process.on('unhandledRejection',(reason,p)=>{cov_x4vtdg9e0.f[10]++;cov_x4vtdg9e0.s[57]++;loggers._.error('Unhandled Rejection reason '+reason+' promise '+util.inspect(p));});}else{cov_x4vtdg9e0.b[9][1]++;}}cov_x4vtdg9e0.s[58]++;firstTime();//# sourceMappingURL=data:application/json;charset=utf-8;base64,