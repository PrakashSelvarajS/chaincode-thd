"use strict";var cov_1z0ovnmzl7=function(){var path="C:\\Users\\PRAKASHSELVARAJ\\Blockchain\\Home Depot\\Development\\chaincode_0901\\src\\___tests___\\___test-helper.ts";var hash="9bb4781e8a968a64f08209299543bef7898dcee2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\PRAKASHSELVARAJ\\Blockchain\\Home Depot\\Development\\chaincode_0901\\src\\___tests___\\___test-helper.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:22},end:{line:3,column:44}},"2":{start:{line:4,column:17},end:{line:4,column:37}},"3":{start:{line:5,column:11},end:{line:5,column:24}},"4":{start:{line:6,column:13},end:{line:6,column:28}},"5":{start:{line:7,column:13},end:{line:7,column:28}},"6":{start:{line:8,column:23},end:{line:8,column:50}},"7":{start:{line:9,column:14},end:{line:9,column:30}},"8":{start:{line:10,column:18},end:{line:10,column:39}},"9":{start:{line:11,column:16},end:{line:11,column:34}},"10":{start:{line:14,column:8},end:{line:14,column:34}},"11":{start:{line:17,column:0},end:{line:17,column:36}},"12":{start:{line:18,column:0},end:{line:18,column:14}},"13":{start:{line:19,column:0},end:{line:19,column:25}},"14":{start:{line:20,column:0},end:{line:20,column:20}},"15":{start:{line:23,column:8},end:{line:23,column:74}},"16":{start:{line:24,column:8},end:{line:24,column:85}},"17":{start:{line:25,column:8},end:{line:28,column:10}},"18":{start:{line:31,column:0},end:{line:31,column:34}},"19":{start:{line:32,column:0},end:{line:32,column:43}},"20":{start:{line:36,column:8},end:{line:36,column:55}},"21":{start:{line:37,column:27},end:{line:37,column:175}},"22":{start:{line:38,column:30},end:{line:38,column:88}},"23":{start:{line:39,column:25},end:{line:39,column:43}},"24":{start:{line:40,column:8},end:{line:40,column:80}},"25":{start:{line:41,column:8},end:{line:41,column:82}},"26":{start:{line:42,column:8},end:{line:47,column:9}},"27":{start:{line:43,column:12},end:{line:43,column:175}},"28":{start:{line:46,column:12},end:{line:46,column:110}},"29":{start:{line:48,column:8},end:{line:53,column:9}},"30":{start:{line:49,column:12},end:{line:49,column:130}},"31":{start:{line:52,column:12},end:{line:52,column:65}},"32":{start:{line:54,column:8},end:{line:59,column:9}},"33":{start:{line:55,column:12},end:{line:55,column:169}},"34":{start:{line:58,column:12},end:{line:58,column:104}},"35":{start:{line:61,column:8},end:{line:61,column:89}},"36":{start:{line:62,column:8},end:{line:62,column:141}},"37":{start:{line:64,column:8},end:{line:67,column:9}},"38":{start:{line:65,column:12},end:{line:65,column:100}},"39":{start:{line:66,column:12},end:{line:66,column:130}},"40":{start:{line:69,column:25},end:{line:83,column:9}},"41":{start:{line:70,column:33},end:{line:70,column:40}},"42":{start:{line:72,column:16},end:{line:72,column:45}},"43":{start:{line:73,column:16},end:{line:81,column:18}},"44":{start:{line:77,column:38},end:{line:77,column:42}},"45":{start:{line:78,column:40},end:{line:78,column:91}},"46":{start:{line:84,column:8},end:{line:84,column:56}},"47":{start:{line:85,column:8},end:{line:85,column:40}},"48":{start:{line:86,column:8},end:{line:86,column:114}},"49":{start:{line:88,column:8},end:{line:88,column:89}},"50":{start:{line:89,column:8},end:{line:89,column:141}},"51":{start:{line:91,column:8},end:{line:91,column:101}},"52":{start:{line:92,column:8},end:{line:92,column:110}},"53":{start:{line:93,column:8},end:{line:93,column:26}},"54":{start:{line:96,column:0},end:{line:96,column:32}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:13,column:4},end:{line:13,column:5}},loc:{start:{line:13,column:22},end:{line:15,column:5}},line:13},"1":{name:"(anonymous_1)",decl:{start:{line:22,column:4},end:{line:22,column:5}},loc:{start:{line:22,column:18},end:{line:29,column:5}},line:22},"2":{name:"(anonymous_2)",decl:{start:{line:34,column:4},end:{line:34,column:5}},loc:{start:{line:34,column:18},end:{line:34,column:21}},line:34},"3":{name:"(anonymous_3)",decl:{start:{line:35,column:4},end:{line:35,column:5}},loc:{start:{line:35,column:52},end:{line:94,column:5}},line:35},"4":{name:"(anonymous_4)",decl:{start:{line:70,column:19},end:{line:70,column:20}},loc:{start:{line:70,column:31},end:{line:70,column:42}},line:70},"5":{name:"(anonymous_5)",decl:{start:{line:71,column:18},end:{line:71,column:19}},loc:{start:{line:71,column:30},end:{line:82,column:13}},line:71},"6":{name:"(anonymous_6)",decl:{start:{line:77,column:32},end:{line:77,column:33}},loc:{start:{line:77,column:38},end:{line:77,column:42}},line:77},"7":{name:"(anonymous_7)",decl:{start:{line:78,column:34},end:{line:78,column:35}},loc:{start:{line:78,column:40},end:{line:78,column:91}},line:78}},branchMap:{"0":{loc:{start:{line:37,column:27},end:{line:37,column:175}},type:"cond-expr",locations:[{start:{line:37,column:55},end:{line:37,column:108}},{start:{line:37,column:111},end:{line:37,column:175}}],line:37},"1":{loc:{start:{line:42,column:8},end:{line:47,column:9}},type:"if",locations:[{start:{line:42,column:8},end:{line:47,column:9}},{start:{line:42,column:8},end:{line:47,column:9}}],line:42},"2":{loc:{start:{line:48,column:8},end:{line:53,column:9}},type:"if",locations:[{start:{line:48,column:8},end:{line:53,column:9}},{start:{line:48,column:8},end:{line:53,column:9}}],line:48},"3":{loc:{start:{line:54,column:8},end:{line:59,column:9}},type:"if",locations:[{start:{line:54,column:8},end:{line:59,column:9}},{start:{line:54,column:8},end:{line:59,column:9}}],line:54}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184",hash:"9bb4781e8a968a64f08209299543bef7898dcee2"};var coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}return coverage[path]=coverageData;}();cov_1z0ovnmzl7.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});const fabric_shim_1=(cov_1z0ovnmzl7.s[1]++,require("fabric-shim"));const models_1=(cov_1z0ovnmzl7.s[2]++,require("../models"));const fs=(cov_1z0ovnmzl7.s[3]++,require("fs"));const path=(cov_1z0ovnmzl7.s[4]++,require("path"));const chai=(cov_1z0ovnmzl7.s[5]++,require("chai"));const chaiAsPromised=(cov_1z0ovnmzl7.s[6]++,require("chai-as-promised"));const sinon=(cov_1z0ovnmzl7.s[7]++,require("sinon"));const sinonChai=(cov_1z0ovnmzl7.s[8]++,require("sinon-chai"));const winston=(cov_1z0ovnmzl7.s[9]++,require("winston"));class APTestConfig{constructor(init){cov_1z0ovnmzl7.f[0]++;cov_1z0ovnmzl7.s[10]++;Object.assign(this,init);}}cov_1z0ovnmzl7.s[11]++;exports.APTestConfig=APTestConfig;cov_1z0ovnmzl7.s[12]++;chai.should();cov_1z0ovnmzl7.s[13]++;chai.use(chaiAsPromised);cov_1z0ovnmzl7.s[14]++;chai.use(sinonChai);class TestContext{constructor(){cov_1z0ovnmzl7.f[1]++;cov_1z0ovnmzl7.s[15]++;this.stub=sinon.createStubInstance(fabric_shim_1.ChaincodeStub);cov_1z0ovnmzl7.s[16]++;this.clientIdentity=sinon.createStubInstance(fabric_shim_1.ClientIdentity);cov_1z0ovnmzl7.s[17]++;this.logging={getLogger:sinon.stub().returns(sinon.createStubInstance(winston.createLogger().constructor)),setLevel:sinon.stub()};}}cov_1z0ovnmzl7.s[18]++;exports.TestContext=TestContext;cov_1z0ovnmzl7.s[19]++;exports.testPDCName='collection_Org1MSP';class TestHelper{constructor(){cov_1z0ovnmzl7.f[2]++;}static loadAPTestConfig(testID,ctx,subfolder){cov_1z0ovnmzl7.f[3]++;cov_1z0ovnmzl7.s[20]++;ctx.clientIdentity.getMSPID.returns('Org1MSP');let testFilePath=(cov_1z0ovnmzl7.s[21]++,subfolder===undefined?(cov_1z0ovnmzl7.b[0][0]++,path.join(__dirname,'testconfigs',testID+'.json')):(cov_1z0ovnmzl7.b[0][1]++,path.join(__dirname,'testconfigs',subfolder,testID+'.json')));let basicTestConfig=(cov_1z0ovnmzl7.s[22]++,JSON.parse(fs.readFileSync(testFilePath).toString('utf8')));let testConfig=(cov_1z0ovnmzl7.s[23]++,new APTestConfig());cov_1z0ovnmzl7.s[24]++;testConfig.input=new models_1.AssetProcurement(basicTestConfig.input);cov_1z0ovnmzl7.s[25]++;testConfig.output=new models_1.AssetProcurement(basicTestConfig.output);cov_1z0ovnmzl7.s[26]++;if(basicTestConfig.existingUOMs===undefined){cov_1z0ovnmzl7.b[1][0]++;cov_1z0ovnmzl7.s[27]++;testConfig.existingUOMs=new models_1.UnitOfMeasureList({Items:JSON.parse(fs.readFileSync(path.join(__dirname,'testconfigs','UOM.json')).toString('utf8'))});}else{cov_1z0ovnmzl7.b[1][1]++;cov_1z0ovnmzl7.s[28]++;testConfig.existingUOMs=new models_1.UnitOfMeasureList({Items:basicTestConfig.existingUOMs});}cov_1z0ovnmzl7.s[29]++;if(basicTestConfig.existingAPs===undefined){cov_1z0ovnmzl7.b[2][0]++;cov_1z0ovnmzl7.s[30]++;testConfig.existingAPs=JSON.parse(fs.readFileSync(path.join(__dirname,'testconfigs','AP.json')).toString('utf8'));}else{cov_1z0ovnmzl7.b[2][1]++;cov_1z0ovnmzl7.s[31]++;testConfig.existingAPs=basicTestConfig.existingAPs;}cov_1z0ovnmzl7.s[32]++;if(basicTestConfig.existingADRs===undefined){cov_1z0ovnmzl7.b[3][0]++;cov_1z0ovnmzl7.s[33]++;testConfig.existingADRs=new models_1.ADRRuleList({Items:JSON.parse(fs.readFileSync(path.join(__dirname,'testconfigs','ADR.json')).toString('utf8'))});}else{cov_1z0ovnmzl7.b[3][1]++;cov_1z0ovnmzl7.s[34]++;testConfig.existingADRs=new models_1.ADRRuleList({Items:basicTestConfig.existingADRs});}// Add the UOM List record, and record composite key creator
cov_1z0ovnmzl7.s[35]++;ctx.stub.createCompositeKey.withArgs('uom',['DEFAULT']).returns(' uom DEFAULT');cov_1z0ovnmzl7.s[36]++;ctx.stub.getPrivateData.withArgs(exports.testPDCName,' uom DEFAULT').resolves(Buffer.from(JSON.stringify(testConfig.existingUOMs)));// Add each AP record, and record composite key creator
cov_1z0ovnmzl7.s[37]++;for(let ap of testConfig.existingAPs){cov_1z0ovnmzl7.s[38]++;ctx.stub.createCompositeKey.withArgs('ap',[ap.PONumber]).returns(' ap '+ap.PONumber);cov_1z0ovnmzl7.s[39]++;ctx.stub.getPrivateData.withArgs(exports.testPDCName,' ap '+ap.PONumber).resolves(Buffer.from(JSON.stringify(ap)));}// Add all records for the find search
let apIterator=(cov_1z0ovnmzl7.s[40]++,{close:async()=>{cov_1z0ovnmzl7.f[4]++;cov_1z0ovnmzl7.s[41]++;return;},next:async()=>{cov_1z0ovnmzl7.f[5]++;cov_1z0ovnmzl7.s[42]++;apIterator['currentIndex']++;cov_1z0ovnmzl7.s[43]++;return{value:{key:'ap',value:Buffer.from(JSON.stringify(apIterator['allItems'][apIterator['currentIndex']])),getKey:()=>{cov_1z0ovnmzl7.f[6]++;cov_1z0ovnmzl7.s[44]++;return'ap';},getValue:()=>{cov_1z0ovnmzl7.f[7]++;cov_1z0ovnmzl7.s[45]++;return Buffer.from(JSON.stringify(testConfig.existingAPs));}},done:apIterator['allItems'].length==apIterator['currentIndex']+1};}});cov_1z0ovnmzl7.s[46]++;apIterator['allItems']=testConfig.existingAPs;cov_1z0ovnmzl7.s[47]++;apIterator['currentIndex']=-1;cov_1z0ovnmzl7.s[48]++;ctx.stub.getPrivateDataByPartialCompositeKey.withArgs(exports.testPDCName,'ap',[]).resolves(apIterator);// Add the ADR Rule List record, and record composite key creator
cov_1z0ovnmzl7.s[49]++;ctx.stub.createCompositeKey.withArgs('adr',['DEFAULT']).returns(' adr DEFAULT');cov_1z0ovnmzl7.s[50]++;ctx.stub.getPrivateData.withArgs(exports.testPDCName,' adr DEFAULT').resolves(Buffer.from(JSON.stringify(testConfig.existingADRs)));// Add the null record
cov_1z0ovnmzl7.s[51]++;ctx.stub.createCompositeKey.withArgs('ap',['DOES_NOT_EXIST']).returns(' ap DOES_NOT_EXIST');cov_1z0ovnmzl7.s[52]++;ctx.stub.getPrivateData.withArgs(exports.testPDCName,' ap DOES_NOT_EXIST').resolves(Buffer.from(''));cov_1z0ovnmzl7.s[53]++;return testConfig;}}cov_1z0ovnmzl7.s[54]++;exports.TestHelper=TestHelper;//# sourceMappingURL=data:application/json;charset=utf-8;base64,